<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:local="using:GenericApp.Views.Controls"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:localConverters="using:GenericApp.Views.Converters"
					xmlns:u="using:Uno.UI.Controls"
					xmlns:xamarin="http://uno.ui/xamarin"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:not_wasm="http://uno.ui/not_wasm"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:native_ios="using:UIKit"
					xmlns:native_android="using:Android.Widget"
					xmlns:uBehaviors="using:Uno.UI.Behaviors"
					mc:Ignorable="d xamarin ios android not_wasm wasm">

	<!-- TODO: How does UWP override the default FontFamily value of 11 with 15? -->
	<wasm:Style TargetType="TextBlock">
		<Setter Property="FontSize"
				Value="15" />
	</wasm:Style>

	<!-- TODO: Also use for iOS and Android? -->
	<!-- TODO: Same as UWP's default template? -->
	<wasm:Style TargetType="ItemsControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ItemsControl">
					<ItemsPresenter Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</wasm:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ContentControl -->
	<Style TargetType="ContentControl">
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<wasm:Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<ContentPresenter Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
									  Margin="{TemplateBinding Padding}"
									  ContentTransitions="{TemplateBinding ContentTransitions}"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
				</ControlTemplate>
			</Setter.Value>
		</wasm:Setter>
	</Style>

	<!-- FRAMEWORK STYLES -->
	<xamarin:Style x:Key="BaseTextBlockStyle"
				   TargetType="TextBlock">
		<Setter Property="FontFamily"
				Value="XamlAutoFontFamily" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="FontSize"
				Value="15" />
		<Setter Property="TextTrimming"
				Value="None" />
		<Setter Property="TextWrapping"
				Value="Wrap" />
		<Setter Property="LineStackingStrategy"
				Value="MaxHeight" />
		<Setter Property="TextLineBounds"
				Value="Full" />
	</xamarin:Style>
	<xamarin:Style x:Key="HeaderTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="FontSize"
				Value="46" />
		<Setter Property="FontWeight"
				Value="Light" />
		<Setter Property="OpticalMarginAlignment"
				Value="TrimSideBearings" />
	</xamarin:Style>
	<xamarin:Style x:Key="SubheaderTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="FontSize"
				Value="34" />
		<Setter Property="FontWeight"
				Value="Light" />
		<Setter Property="OpticalMarginAlignment"
				Value="TrimSideBearings" />
	</xamarin:Style>
	<xamarin:Style x:Key="TitleTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="FontWeight"
				Value="SemiLight" />
		<Setter Property="FontSize"
				Value="24" />
		<Setter Property="OpticalMarginAlignment"
				Value="TrimSideBearings" />
	</xamarin:Style>
	<xamarin:Style x:Key="SubtitleTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="FontSize"
				Value="20" />
		<Setter Property="OpticalMarginAlignment"
				Value="TrimSideBearings" />
	</xamarin:Style>
	<xamarin:Style x:Key="BodyTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="FontSize"
				Value="15" />
	</xamarin:Style>
	<xamarin:Style x:Key="CaptionTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="FontSize"
				Value="12" />
		<Setter Property="FontWeight"
				Value="Normal" />
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.Primitives.HyperlinkButton -->
	<xamarin:Style TargetType="HyperlinkButton">
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlHyperlinkTextBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource HyperlinkButtonBorderThemeThickness}" />
		<Setter Property="Padding"
				Value="0,6,0,6" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid x:Name="RootGrid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHyperlinkBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  Content="{TemplateBinding Content}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Padding="{TemplateBinding Padding}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!--Default style for Windows.UI.Xaml.Controls.TextBox-->
	<xamarin:Style x:Key="XamlDefaultTextBox"
				   TargetType="TextBox">
		<Setter Property="MinWidth"
				Value="{ThemeResource TextControlThemeMinWidth}" />
		<Setter Property="MinHeight"
				Value="{ThemeResource TextControlThemeMinHeight}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundAltHighBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}" />
		<Setter Property="SelectionHighlightColor"
				Value="{ThemeResource SystemControlHighlightAccentBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource TextControlBorderThemeThickness}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="Padding"
				Value="{ThemeResource TextControlThemePadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource TextControlBackgroundHoverOpacity}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlPageTextChromeBlackMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource TextControlBackgroundFocusedOpacity}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundChromeBlackHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
																	   Storyboard.TargetProperty="RequestedTheme">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Light" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border x:Name="BackgroundElement"
								Grid.Row="1"
								Background="{TemplateBinding Background}"
								Margin="{TemplateBinding BorderThickness}"
								Opacity="{ThemeResource TextControlBackgroundRestOpacity}"
								Grid.ColumnSpan="2"
								Grid.RowSpan="1" />
						<Border x:Name="BorderElement"
								Grid.Row="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Grid.ColumnSpan="2"
								Grid.RowSpan="1" />
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Visibility="Collapsed"
										  Grid.Row="0"
										  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
										  Margin="0,0,0,8"
										  Grid.ColumnSpan="2"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  FontWeight="Normal" />
						<ScrollViewer x:Name="ContentElement"
									  Grid.Row="1"
									  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									  Margin="{TemplateBinding BorderThickness}"
									  Padding="{TemplateBinding Padding}"
									  IsTabStop="False"
									  AutomationProperties.AccessibilityView="Raw"
									  ZoomMode="Disabled" />
						<ContentControl x:Name="PlaceholderTextContentPresenter"
										Grid.Row="1"
										Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
										Margin="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										IsTabStop="False"
										Grid.ColumnSpan="2"
										Content="{TemplateBinding PlaceholderText}"
										IsHitTestVisible="False" />
						<Button x:Name="DeleteButton"
								Grid.Row="1"
								Style="{StaticResource DeleteButtonStyle}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Margin="{ThemeResource HelperButtonThemePadding}"
								IsTabStop="False"
								Grid.Column="1"
								Visibility="Collapsed"
								FontSize="{TemplateBinding FontSize}"
								MinWidth="34"
								VerticalAlignment="Stretch" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!--Style for the textbox's delete button-->
	<xamarin:Style x:Key="DeleteButtonStyle"
				   TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						  BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Background="{ThemeResource TextBoxButtonBackgroundThemeBrush}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="GlyphElement"
								   Foreground="{ThemeResource SystemControlForegroundChromeBlackMediumBrush}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Center"
								   FontStyle="Normal"
								   FontSize="12"
								   Text="&#xE10A;"
								   FontFamily="{ThemeResource SymbolThemeFontFamily}"
								   AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ComboBox -->
	<xamarin:Style x:Key="DefaultComboBoxStyle"
				   TargetType="ComboBox">
		<Setter Property="Padding"
				Value="12,5,0,7" />
		<Setter Property="MinWidth"
				Value="{ThemeResource ComboBoxThemeMinWidth}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundAltMediumLowBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource ComboBoxBorderThemeThickness}" />
		<Setter Property="TabNavigation"
				Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled"
				Value="True" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<wasm:ItemsStackPanel Orientation="Vertical" />
					<not_wasm:CarouselPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="32" />
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlPageBackgroundAltMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<not_wasm:ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																				Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</not_wasm:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBackground"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="HighlightBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<not_wasm:ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																				Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</not_wasm:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="FocusedPressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HighlightBackground"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<not_wasm:ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																				Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</not_wasm:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="FocusedDropDown">
									<Storyboard>
										<not_wasm:ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
																				Storyboard.TargetProperty="Visibility"
																				Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</not_wasm:ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Opened">
									<Storyboard>
										<win:SplitOpenThemeAnimation OpenedTargetName="PopupBorder"
																	 ClosedTargetName="ContentPresenter"
																	 OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
																	 OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed">
									<Storyboard>
										<win:SplitCloseThemeAnimation OpenedTargetName="PopupBorder"
																	  ClosedTargetName="ContentPresenter"
																	  OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
																	  OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Margin="{ThemeResource ComboBoxHeaderThemeMargin}"
										  FlowDirection="{TemplateBinding FlowDirection}"
										  FontWeight="{ThemeResource ComboBoxHeaderThemeFontWeight}"
										  Visibility="Collapsed"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}" />
						<Border x:Name="Background"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<Border x:Name="HighlightBackground"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								Background="{ThemeResource SystemControlHighlightListAccentLowBrush}"
								BorderBrush="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Opacity="0" />
						<ContentPresenter x:Name="ContentPresenter"
										  Grid.Row="1"
										  ContentTemplate="{TemplateBinding ItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<TextBlock x:Name="PlaceholderTextBlock"
									   Text="{TemplateBinding PlaceholderText}"
									   Foreground="{ThemeResource SystemControlPageTextBaseHighBrush}" />
						</ContentPresenter>
						<not_android:FontIcon x:Name="DropDownGlyph"
											  Grid.Row="1"
											  Grid.Column="1"
											  IsHitTestVisible="False"
											  Margin="0,10,10,10"
											  Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
											  FontFamily="{ThemeResource SymbolThemeFontFamily}"
											  FontSize="12"
											  Glyph="&#xE0E5;"
											  HorizontalAlignment="Right"
											  VerticalAlignment="Center"
											  AutomationProperties.AccessibilityView="Raw" />
						<android:TextBlock x:Name="DropDownGlyph"
										   Grid.Row="1"
										   Grid.Column="1"
										   IsHitTestVisible="False"
										   Margin="0,10,10,10"
										   Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
										   FontFamily="{ThemeResource SymbolThemeFontFamily}"
										   FontSize="12"
										   Text="&#xE0E5;"
										   HorizontalAlignment="Right"
										   VerticalAlignment="Center"
										   AutomationProperties.AccessibilityView="Raw" />
						<Popup x:Name="Popup">
							<Border x:Name="PopupBorder"
									Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
									BorderBrush="{ThemeResource SystemControlForegroundChromeHighBrush}"
									BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}"
									Margin="0,-1,0,-1"
									HorizontalAlignment="Stretch">
								<ScrollViewer x:Name="ScrollViewer"
											  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
											  win:MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownContentMinWidth}"
											  VerticalSnapPointsType="OptionalSingle"
											  VerticalSnapPointsAlignment="Near"
											  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
											  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
											  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
											  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
											  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
											  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
											  ZoomMode="Disabled"
											  AutomationProperties.AccessibilityView="Raw">
									<ItemsPresenter Margin="{ThemeResource ComboBoxDropdownContentMargin}" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<Style TargetType="ComboBox"
		   BasedOn="{StaticResource DefaultComboBoxStyle}" />

	<!-- Default style for Windows.UI.Xaml.Controls.ComboBoxItem -->
	<xamarin:Style x:Key="DefaultComboBoxItemStyle"
				   TargetType="ComboBoxItem">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="TabNavigation"
				Value="Local" />
		<Setter Property="Padding"
				Value="{ThemeResource ComboBoxItemThemePadding}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Control.IsTemplateFocusTarget="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="LayoutRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputModeStates">
								<VisualState x:Name="InputModeDefault" />
								<VisualState x:Name="TouchInputMode">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ComboBoxItemThemeTouchPadding}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  Content="{TemplateBinding Content}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Foreground="{TemplateBinding Foreground}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style TargetType="ComboBoxItem"
				   BasedOn="{StaticResource DefaultComboBoxItemStyle}" />

	<!-- Style for Windows.UI.Xaml.Controls.ListViewItem -->
	<xamarin:Style TargetType="ListViewItem"
				   x:Key="ListViewItemExpanded">
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="TabNavigation"
				Value="Local" />
		<Setter Property="IsHoldingEnabled"
				Value="True" />
		<Setter Property="Padding"
				Value="12,0,12,0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="MinWidth"
				Value="{ThemeResource ListViewItemMinWidth}" />
		<Setter Property="MinHeight"
				Value="{ThemeResource ListViewItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<Grid x:Name="ContentBorder"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDisabledThemeOpacity}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectDisabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="-32"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
																		   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="32"
																  KeySpline="0.1,0.9,0.2,1" />
										</win:DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.333"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultiSelectEnabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="-32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
																		   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</win:DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="-32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="32,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable" />
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint" />
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Bottom" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Top" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Right" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Left" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NoReorderHint"
													  GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<win:DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<win:DropTargetItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<!-- These two Opacity animations are required - the FadeInThemeAnimations
										 on the same elements animate an internal Opacity. -->
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
										<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
										<win:DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<win:FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggedPlaceholder">
									<Storyboard>
										<win:FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NotDragging"
													  GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BorderBackground"
								   IsHitTestVisible="False"
								   Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
								   Opacity="0"
								   Control.IsTemplateFocusTarget="True" />
						<Grid x:Name="ContentPresenterGrid"
							  Background="Transparent"
							  Margin="0,0,0,0">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
							</Grid.RenderTransform>
							<ContentPresenter x:Name="ContentPresenter"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  xamarin:ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											  Content="{TemplateBinding Content}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Margin="{TemplateBinding Padding}" />
						</Grid>
						<!-- The 'Xg' text simulates the amount of space one line of text will occupy.
						  In the DataPlaceholder state, the Content is not loaded yet so we
						  approximate the size of the item using placeholder text. -->
						<TextBlock x:Name="PlaceholderTextBlock"
								   Opacity="0"
								   Text="Xg"
								   Foreground="{x:Null}"
								   Margin="{TemplateBinding Padding}"
								   IsHitTestVisible="False"
								   AutomationProperties.AccessibilityView="Raw" />
						<Rectangle x:Name="PlaceholderRect"
								   Visibility="Collapsed"
								   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" />
						<Rectangle x:Name="MultiArrangeOverlayBackground"
								   IsHitTestVisible="False"
								   Opacity="0"
								   Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
								   Grid.ColumnSpan="2" />
						<Border x:Name="MultiSelectSquare"
								BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
								BorderThickness="2"
								Width="20"
								Height="20"
								Margin="12,0,0,0"
								VerticalAlignment="Center"
								HorizontalAlignment="Left"
								Visibility="Collapsed">
							<Border.Clip>
								<RectangleGeometry Rect="0,0,20,20">
									<win:RectangleGeometry.Transform>
										<TranslateTransform x:Name="MultiSelectClipTransform" />
									</win:RectangleGeometry.Transform>
								</RectangleGeometry>
							</Border.Clip>
							<Border.RenderTransform>
								<TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
							</Border.RenderTransform>
							<FontIcon x:Name="MultiSelectCheck"
									  FontFamily="{ThemeResource SymbolThemeFontFamily}"
									  win:Glyph="&#xE73E;"
									  xamarin:Glyph="&#xE081;"
									  FontSize="16"
									  Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									  Visibility="Collapsed"
									  Opacity="0" />
						</Border>
						<TextBlock x:Name="MultiArrangeOverlayText"
								   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
								   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
								   FontFamily="{ThemeResource ContentControlThemeFontFamily}"
								   FontSize="26.667"
								   IsHitTestVisible="False"
								   Opacity="0"
								   TextWrapping="Wrap"
								   TextTrimming="WordEllipsis"
								   Margin="18,9,0,0"
								   AutomationProperties.AccessibilityView="Raw"
								   Grid.ColumnSpan="2" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style TargetType="ListViewItem"
				   BasedOn="{StaticResource ListViewItemExpanded}" />

	<!-- Style for Windows.UI.Xaml.Controls.GridViewItem -->
	<xamarin:Style TargetType="GridViewItem"
				   x:Key="GridViewItemExpanded">
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="TabNavigation"
				Value="Local" />
		<Setter Property="IsHoldingEnabled"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Margin"
				Value="0,0,4,4" />
		<Setter Property="MinWidth"
				Value="{ThemeResource GridViewItemMinWidth}" />
		<Setter Property="MinHeight"
				Value="{ThemeResource GridViewItemMinHeight}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewItem">
					<Grid x:Name="ContentBorder"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderRectangle"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderRectangle"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderRectangle"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderRectangle"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderRectangle"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDisabledThemeOpacity}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.333"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<win:FadeOutThemeAnimation TargetName="MultiSelectSquare" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultiSelectEnabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<win:FadeInThemeAnimation TargetName="MultiSelectSquare" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable" />
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint" />
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
																	Direction="Bottom" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
																	Direction="Top" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
																	Direction="Right" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
																	Direction="Left" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NoReorderHint"
													  GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<win:DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<win:DropTargetItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<!-- These two Opacity animations are required - the FadeInThemeAnimations
										   on the same elements animate an internal Opacity. -->
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
										<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
										<win:DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<win:FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggedPlaceholder">
									<Storyboard>
										<win:FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NotDragging"
													  GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Margin="{TemplateBinding Padding}" />
						<!-- The 'Xg' text simulates the amount of space one line of text will occupy.
							In the DataPlaceholder state, the Content is not loaded yet so we
							approximate the size of the item using placeholder text. -->
						<TextBlock x:Name="PlaceholderTextBlock"
								   Visibility="Collapsed"
								   Text="Xg"
								   Foreground="{x:Null}"
								   Margin="{TemplateBinding Padding}"
								   IsHitTestVisible="False"
								   AutomationProperties.AccessibilityView="Raw" />
						<Rectangle x:Name="PlaceholderRect"
								   Visibility="Collapsed"
								   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" />
						<Rectangle x:Name="MultiArrangeOverlayBackground"
								   IsHitTestVisible="False"
								   Opacity="0"
								   Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
								   Grid.ColumnSpan="2" />
						<Rectangle x:Name="BorderRectangle"
								   IsHitTestVisible="False"
								   Stroke="{ThemeResource SystemControlHighlightListAccentLowBrush}"
								   StrokeThickness="2"
								   Opacity="0" />
						<Border x:Name="MultiSelectSquare"
								Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
								Width="20"
								Height="20"
								Margin="0,2,2,0"
								VerticalAlignment="Top"
								HorizontalAlignment="Right"
								Visibility="Collapsed">
							<FontIcon x:Name="MultiSelectCheck"
									  FontFamily="{ThemeResource SymbolThemeFontFamily}"
									  win:Glyph="&#xE73E;"
									  xamarin:Glyph="&#xE081;"
									  FontSize="16"
									  Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									  Opacity="0" />
						</Border>
						<Rectangle x:Name="FocusVisualWhite"
								   IsHitTestVisible="False"
								   Stroke="{ThemeResource SystemControlForegroundAltHighBrush}"
								   StrokeEndLineCap="Square"
								   StrokeDashArray="1.0,1.0"
								   StrokeDashOffset="1.5"
								   StrokeThickness="2"
								   Opacity="0" />
						<Rectangle x:Name="FocusVisualBlack"
								   IsHitTestVisible="False"
								   Stroke="{ThemeResource SystemControlForegroundBaseHighBrush}"
								   StrokeEndLineCap="Square"
								   StrokeDashArray="1.0,1.0"
								   StrokeDashOffset="0.5"
								   StrokeThickness="2"
								   Opacity="0" />
						<TextBlock x:Name="MultiArrangeOverlayText"
								   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
								   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
								   FontFamily="{ThemeResource ContentControlThemeFontFamily}"
								   FontSize="26.667"
								   IsHitTestVisible="False"
								   Opacity="0"
								   TextWrapping="Wrap"
								   TextTrimming="WordEllipsis"
								   Margin="18,9,0,0"
								   AutomationProperties.AccessibilityView="Raw"
								   Grid.ColumnSpan="2" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style TargetType="GridViewItem"
				   BasedOn="{StaticResource GridViewItemExpanded}" />

		<!--Default style for TimePickerSelector - Xamarin-only control internal to TimePickerFlyout-->
	<xamarin:Style TargetType="TimePickerSelector">
		<ios:Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TimePickerSelector">
					<ContentControl HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch">
						<native_ios:UIDatePicker />
					</ContentControl>
				</ControlTemplate>
			</Setter.Value>
		</ios:Setter>
		<android:Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TimePickerSelector">
					<Border Background="White"
							VerticalAlignment="Center"
							HorizontalAlignment="Center">
						<native_android:TimePicker />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</android:Setter>
	</xamarin:Style>

	<xamarin:Style x:Key="TimePickerFlyoutButtonStyle"
				   TargetType="Button">
		<Setter Property="UseSystemFocusVisuals"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlPageBackgroundAltMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
										  Background="{ThemeResource SystemControlBackgroundAltMediumLowBrush}"
										  BorderThickness="2"
										  Content="{TemplateBinding Content}"
										  Foreground="{TemplateBinding Foreground}"
										  HorizontalContentAlignment="Stretch"
										  VerticalContentAlignment="Stretch"
										  AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.TimePicker -->
	<!--https://msdn.microsoft.com/en-us/library/windows/apps/mt299156.aspx-->
	<xamarin:Style TargetType="TimePicker">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
        <!-- Uno specific property use only in ios, set placement to "Full" to dock of the flyout at the bottom of the screen -->
        <ios:Setter Property="FlyoutPlacement"
				Value="Full" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TimePicker">
					<StackPanel x:Name="LayoutRoot"
								Margin="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FirstColumnDivider"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondColumnDivider"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Visibility="Collapsed"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  Margin="0,0,0,8"
										  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
										  AutomationProperties.AccessibilityView="Raw" />
						<Button x:Name="FlyoutButton"
								Style="{StaticResource TimePickerFlyoutButtonStyle}"
								Foreground="{TemplateBinding Foreground}"
								Background="{TemplateBinding Background}"
								IsEnabled="{TemplateBinding IsEnabled}"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Stretch">
							<Grid x:Name="FlyoutButtonContentGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"
													  x:Name="FirstTextBlockColumn" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*"
													  x:Name="SecondTextBlockColumn" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*"
													  x:Name="ThirdTextBlockColumn" />
								</Grid.ColumnDefinitions>

								<Border x:Name="FirstPickerHost"
										Grid.Column="0">
									<TextBlock x:Name="HourTextBlock"
											   TextAlignment="Center"
											   Padding="0,3,0,5"
											   FontFamily="{TemplateBinding FontFamily}"
											   FontWeight="{TemplateBinding FontWeight}"
											   FontSize="{TemplateBinding FontSize}"
											   AutomationProperties.AccessibilityView="Raw" />
								</Border>

								<Rectangle x:Name="FirstColumnDivider"
										   Fill="{ThemeResource SystemControlForegroundBaseLowBrush}"
										   HorizontalAlignment="Center"
										   Width="2"
										   Grid.Column="1" />

								<Border x:Name="SecondPickerHost"
										Grid.Column="2">
									<TextBlock x:Name="MinuteTextBlock"
											   TextAlignment="Center"
											   Padding="0,3,0,5"
											   FontFamily="{TemplateBinding FontFamily}"
											   FontWeight="{TemplateBinding FontWeight}"
											   FontSize="{TemplateBinding FontSize}"
											   AutomationProperties.AccessibilityView="Raw" />
								</Border>

								<Rectangle x:Name="SecondColumnDivider"
										   Fill="{ThemeResource SystemControlForegroundBaseLowBrush}"
										   HorizontalAlignment="Center"
										   Width="2"
										   Grid.Column="3" />

								<Border x:Name="ThirdPickerHost"
										Grid.Column="4">
									<TextBlock x:Name="PeriodTextBlock"
											   TextAlignment="Center"
											   Padding="0,3,0,5"
											   FontFamily="{TemplateBinding FontFamily}"
											   FontWeight="{TemplateBinding FontWeight}"
											   FontSize="{TemplateBinding FontSize}"
											   AutomationProperties.AccessibilityView="Raw" />
								</Border>
							</Grid>
						</Button>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!--Default style for TimePicker - Xamarin-only control internal to TimePickerFlyout-->
	<android:Style TargetType="TimePickerFlyoutPresenter">
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="FlyoutPresenter">
					<Grid>
						<Border HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								IsHitTestVisible="False"
								Opacity="0.50"
								Background="Black" />
						<ContentPresenter Content="{TemplateBinding Content}" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</android:Style>

	<SolidColorBrush x:Key="IOSTimePickerAcceptButtonForegroundBrush"
					 Color="#055bb7" />
	<SolidColorBrush x:Key="IOSTimePickerDismissButtonForegroundBrush"
					 Color="#055bb7" />
	<SolidColorBrush x:Key="IOSTimePickerHeaderBackgroundBrush"
					 Color="#f8f8f8" />

	<ios:Style x:Key="IOSTimePickerDoneCancelButtonStyle"
			   TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ButtonText"
														 Storyboard.TargetProperty="Opacity"
														 To="0.7" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="ButtonText"
								   Margin="{TemplateBinding Padding}"
								   Text="{TemplateBinding Content}"
								   Foreground="{TemplateBinding Foreground}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   FontStyle="{TemplateBinding FontStyle}"
								   FontSize="{TemplateBinding FontSize}"
								   FontFamily="{TemplateBinding FontFamily}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</ios:Style>

	<ios:Style TargetType="TimePickerFlyoutPresenter">
		<Setter Property="Background"
				Value="White" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Bottom" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="AutomationProperties.AutomationId"
				Value="TimePickerFlyoutPresenter" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TimePickerFlyoutPresenter">
					<Grid>
						<Border x:Name="FlyoutScrim"
								Opacity="0.30"
								Background="Black" />

						<Grid x:Name="ContentPanel"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<Grid Background="{StaticResource IOSTimePickerHeaderBackgroundBrush}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Button x:Name="DismissButton"
										x:Uid="TimePickerDismissButton"
										Style="{StaticResource IOSTimePickerDoneCancelButtonStyle}"
										Foreground="{StaticResource IOSTimePickerDismissButtonForegroundBrush}"
										Grid.Column="0"
										Padding="15"
										Content="Cancel"
										FontSize="19"
										HorizontalAlignment="Left" />

								<Border x:Name="HeaderUntapableZone"
										Background="Transparent"
										Grid.Column="1"
										BorderThickness="0" />

								<Button x:Name="AcceptButton"
										x:Uid="TimePickerAcceptButton"
										Style="{StaticResource IOSTimePickerDoneCancelButtonStyle}"
										Foreground="{StaticResource IOSTimePickerAcceptButtonForegroundBrush}"
										Grid.Column="2"
										FontWeight="Bold"
										Padding="15"
										Content="Done"
										FontSize="19"
										HorizontalAlignment="Right" />
							</Grid>

							<ContentPresenter Grid.Row="1"
											  Content="{TemplateBinding Content}"
											  Foreground="{TemplateBinding Foreground}"
											  HorizontalContentAlignment="Stretch"
											  VerticalContentAlignment="Stretch"
											  HorizontalAlignment="Stretch"
											  VerticalAlignment="Stretch" />
						</Grid>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</ios:Style>

	<SolidColorBrush x:Key="SplitViewDismissBackgroundColor"
					 Color="Black"
					 Opacity="0.5" />

	<xamarin:Style x:Key="DefaultSplitViewStyle"
				   TargetType="SplitView">
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="OpenPaneLength"
				Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
		<Setter Property="CompactPaneLength"
				Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
		<Setter Property="PaneBackground"
				Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Key="DefaultSplitViewTemplate"
								 TargetType="SplitView">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisplayModeStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Closed"
													  To="OpenOverlayLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 From="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 To="0"
																	 Duration="0:0:0.35" />
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.35"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="0" />
											</win:DoubleAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.35"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="0" />
											</win:DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="Closed"
													  To="OpenOverlayRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 From="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 To="0"
																	 Duration="0:0:0.35" />
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.35"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="0" />
											</win:DoubleAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.35"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="0" />
											</win:DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="ClosedCompactLeft"
													  To="OpenCompactOverlayLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																		   Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																		   Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																		   Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.35"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="0" />
											</win:DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="ClosedCompactRight"
													  To="OpenCompactOverlayRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																		   Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="*" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
																		   Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																		   Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.35"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="0" />
											</win:DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenOverlayLeft"
													  To="Closed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 From="0"
																	 To="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 Duration="0:0:0.12" />
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenOverlayRight"
													  To="Closed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 To="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 Duration="0:0:0.12" />
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenCompactOverlayLeft"
													  To="ClosedCompactLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																		   Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																		   Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																		   Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenCompactOverlayRight"
													  To="ClosedCompactRight">
										<Storyboard>
											<xamarin:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Clip"
																				   Storyboard.TargetName="PaneRoot">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.RightClip, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</xamarin:ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																		   Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="*" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
																		   Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																		   Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Closed">
									<!-- Workaround because values aren't properly reset on Wasm.-->
									<Storyboard>
										<wasm:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																			Storyboard.TargetName="PaneRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Collapsed" />
										</wasm:ObjectAnimationUsingKeyFrames>
										<wasm:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)"
																			Storyboard.TargetName="ContentRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</wasm:ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ClosedCompactLeft">
									<Storyboard>
										<xamarin:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Clip"
																			   Storyboard.TargetName="PaneRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding TemplateSettings.LeftClip, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</xamarin:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<win:DoubleAnimation Storyboard.TargetName="PaneClipRectangleTransform"
															 Storyboard.TargetProperty="TranslateX"
															 To="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
															 Duration="0:0:0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ClosedCompactRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="*" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="2" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Right" />
										</ObjectAnimationUsingKeyFrames>
										<win:DoubleAnimation Storyboard.TargetName="PaneClipRectangleTransform"
															 Storyboard.TargetProperty="TranslateX"
															 To="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
															 Duration="0:0:0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenOverlayLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenOverlayRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Right" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Left" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenInlineLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenInlineRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="*" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Left" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenCompactOverlayLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenCompactOverlayRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="*" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Right" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Left" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition1"
											  Width="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							<ColumnDefinition x:Name="ColumnDefinition2"
											  Width="*" />
						</Grid.ColumnDefinitions>

						<!--Content Area-->
						<!-- Wasm: Workaround to make SplitView work (only supports Inline mode). -->
						<Grid x:Name="ContentRoot"
							  wasm:Grid.Column="1"
							  Grid.ColumnSpan="2">
							<Border Child="{TemplateBinding Content}" />
							<win:Rectangle x:Name="LightDismissLayer"
										   Fill="{StaticResource SplitViewDismissBackgroundColor}"
										   Visibility="Collapsed" />
							<xamarin:Button x:Name="LightDismissLayer"
											Visibility="Collapsed"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch">
								<Button.Template>
									<ControlTemplate>
										<Border Background="{StaticResource SplitViewDismissBackgroundColor}" />
									</ControlTemplate>
								</Button.Template>
							</xamarin:Button>
						</Grid>

						<!--Pane Content Area-->
						<Grid x:Name="PaneRoot"
							  Grid.ColumnSpan="2"
							  HorizontalAlignment="Left"
							  Visibility="Collapsed"
							  Background="{TemplateBinding PaneBackground}"
							  Width="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<win:Grid.Clip>
								<RectangleGeometry x:Name="PaneClipRectangle">
									<win:RectangleGeometry.Transform>
										<CompositeTransform x:Name="PaneClipRectangleTransform" />
									</win:RectangleGeometry.Transform>
								</RectangleGeometry>
							</win:Grid.Clip>
							<Grid.RenderTransform>
								<CompositeTransform x:Name="PaneTransform" />
							</Grid.RenderTransform>
							<Border Child="{TemplateBinding Pane}" />
							<Rectangle x:Name="HCPaneBorder"
									   Visibility="Collapsed"
									   Fill="{ThemeResource SystemControlForegroundTransparentBrush}"
									   x:DeferLoadStrategy="Lazy"
									   Width="1"
									   HorizontalAlignment="Right" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style TargetType="SplitView"
				   BasedOn="{StaticResource DefaultSplitViewStyle}" />

	<!-- Default style for Windows.UI.Xaml.Controls.Button -->
	<xamarin:Style x:Key="XamlDefaultButton"
				   TargetType="Button">
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlForegroundTransparentBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource ButtonBorderThemeThickness}" />
		<Setter Property="Padding"
				Value="8,4,8,4" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<!--<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  Content="{TemplateBinding Content}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Padding="{TemplateBinding Padding}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.Primitives.ToggleButton -->
	<xamarin:Style x:Key="XamlDefaultToggleButton"
				   TargetType="ToggleButton">
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlForegroundTransparentBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource ToggleButtonBorderThemeThickness}" />
		<Setter Property="Padding"
				Value="8,4,8,4" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminatePointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminatePressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminateDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  Content="{TemplateBinding Content}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Padding="{TemplateBinding Padding}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<wasm:Style TargetType="Button"
				BasedOn="{StaticResource XamlDefaultButton}" />

	<wasm:Style TargetType="ToggleButton"
				BasedOn="{StaticResource XamlDefaultToggleButton}" />

	<wasm:Style TargetType="CheckBox"
				BasedOn="{StaticResource XamlDefaultCheckBox}" />

	<wasm:Style TargetType="Slider"
				BasedOn="{StaticResource XamlDefaultSlider}" />

	<wasm:Style TargetType="RadioButton"
				BasedOn="{StaticResource XamlDefaultRadioButton}" />

	<wasm:Style TargetType="Frame"
				BasedOn="{StaticResource XamlDefaultFrame}" />

	<wasm:Style TargetType="TextBox"
				BasedOn="{StaticResource XamlDefaultTextBox}" />

	<wasm:Style TargetType="PasswordBox"
				BasedOn="{StaticResource XamlDefaultPasswordBox}" />

	<wasm:Style TargetType="ProgressBar"
				BasedOn="{StaticResource XamlDefaultProgressBar}" />

	<wasm:Style TargetType="ToggleSwitch"
				BasedOn="{StaticResource XamlDefaultToggleSwitch}" />

	<!-- Default style for Windows.UI.Xaml.Controls.CheckBox -->
	<xamarin:Style x:Key="XamlDefaultCheckBox"
				   TargetType="CheckBox">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="Padding"
				Value="8,5,0,0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="MinWidth"
				Value="120" />
		<Setter Property="MinHeight"
				Value="32" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CombinedStates">
								<VisualState x:Name="UncheckedNormal" />
								<VisualState x:Name="UncheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UncheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="NormalRectangle"
														 Storyboard.TargetProperty="StrokeThickness"
														 To="{ThemeResource CheckBoxCheckedStrokeThickness}"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UncheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedNormal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="NormalRectangle"
														 Storyboard.TargetProperty="StrokeThickness"
														 To="{ThemeResource CheckBoxCheckedStrokeThickness}"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="NormalRectangle"
														 Storyboard.TargetProperty="StrokeThickness"
														 To="{ThemeResource CheckBoxCheckedStrokeThickness}"
														 Duration="0" />
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminateNormal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Glyph">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="&#xE73C;" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminatePointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Glyph">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="&#xE73C;" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminatePressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Glyph">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="&#xE73C;" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="IndeterminateDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Glyph">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="&#xE73C;" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid VerticalAlignment="Top"
							  Height="32">
							<Rectangle x:Name="NormalRectangle"
									   Fill="Transparent"
									   Stroke="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									   StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}"
									   UseLayoutRounding="False"
									   Height="20"
									   Width="20" />
							<win:FontIcon x:Name="CheckGlyph"
										  FontFamily="{ThemeResource SymbolThemeFontFamily}"
										  Glyph="&#xE001;"
										  FontSize="20"
										  Foreground="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}"
										  Opacity="0" />
							<xamarin:TextBlock x:Name="CheckGlyph"
											   FontFamily="{ThemeResource SymbolThemeFontFamily}"
											   win:Text="&#xE001;"
											   xamarin:Text="&#xE10B;"
											   FontSize="20"
											   xamarin:VerticalAlignment="Center"
											   Foreground="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}"
											   Opacity="0" />
						</Grid>
						<ContentPresenter x:Name="ContentPresenter"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Grid.Column="1"
										  AutomationProperties.AccessibilityView="Raw"
										  TextWrapping="Wrap" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.RadioButton -->
	<xamarin:Style x:Key="XamlDefaultRadioButton"
				   TargetType="RadioButton">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="Padding"
				Value="8,6,0,0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="MinWidth"
				Value="120" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckOuterEllipse"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<DoubleAnimation Storyboard.TargetName="OuterEllipse"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="0" />
										<DoubleAnimation Storyboard.TargetName="CheckOuterEllipse"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid VerticalAlignment="Top"
							  Height="32">
							<Ellipse x:Name="OuterEllipse"
									 Width="20"
									 Height="20"
									 UseLayoutRounding="False"
									 Stroke="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									 StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}" />
							<Ellipse x:Name="CheckOuterEllipse"
									 Width="20"
									 Height="20"
									 UseLayoutRounding="False"
									 Stroke="{ThemeResource SystemControlHighlightAltAccentBrush}"
									 Fill="{ThemeResource SystemControlHighlightTransparentBrush}"
									 Opacity="0"
									 StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}" />
							<Ellipse x:Name="CheckGlyph"
									 Width="10"
									 Height="10"
									 UseLayoutRounding="False"
									 Opacity="0"
									 Fill="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
						</Grid>
						<ContentPresenter x:Name="ContentPresenter"
										  Content="{TemplateBinding Content}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Grid.Column="1"
										  AutomationProperties.AccessibilityView="Raw"
										  TextWrapping="Wrap" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.Slider -->
	<xamarin:Style TargetType="Thumb"
				   x:Key="SliderThumbStyle">
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background"
				Value="{ThemeResource SystemControlForegroundAccentBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="4" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style x:Key="XamlDefaultSlider"
				   TargetType="Slider">
		<Setter Property="Background"
				Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource SliderBorderThemeThickness}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlHighlightAccentBrush}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="ManipulationMode"
				Value="None" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Slider">
					<Grid Margin="{TemplateBinding Padding}">
						<Grid.Resources>
						</Grid.Resources>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightChromeHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightChromeHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RightTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Visibility="Collapsed"
										  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
										  Margin="{ThemeResource SliderHeaderThemeMargin}"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  FontWeight="{ThemeResource SliderHeaderThemeFontWeight}"
										  TextWrapping="Wrap" />
						<Grid x:Name="SliderContainer"
							  Grid.Row="1"
							  Control.IsTemplateFocusTarget="True">
							<Grid x:Name="HorizontalTemplate"
								  MinHeight="44">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="18" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="18" />
								</Grid.RowDefinitions>
								<Rectangle x:Name="HorizontalTrackRect"
										   Fill="{TemplateBinding Background}"
										   Height="{ThemeResource SliderTrackThemeHeight}"
										   Grid.Row="1"
										   Grid.ColumnSpan="3" />
								<Rectangle x:Name="HorizontalDecreaseRect"
										   Fill="{TemplateBinding Foreground}"
										   Grid.Row="1" />
								<TickBar x:Name="TopTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
										 Height="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 VerticalAlignment="Bottom"
										 Margin="0,0,0,4"
										 Grid.ColumnSpan="3" />
								<TickBar x:Name="HorizontalInlineTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SystemControlBackgroundAltHighBrush}"
										 Height="{ThemeResource SliderTrackThemeHeight}"
										 Grid.Row="1"
										 Grid.ColumnSpan="3" />
								<TickBar x:Name="BottomTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
										 Height="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 VerticalAlignment="Top"
										 Margin="0,4,0,0"
										 Grid.Row="2"
										 Grid.ColumnSpan="3" />
								<Thumb x:Name="HorizontalThumb"
									   Background="{ThemeResource SystemControlForegroundAccentBrush}"
									   Style="{StaticResource SliderThumbStyle}"
									   DataContext="{TemplateBinding Value}"
									   Height="24"
									   Width="8"
									   Grid.Row="0"
									   Grid.RowSpan="3"
									   Grid.Column="1"
									   AutomationProperties.AccessibilityView="Raw" />
							</Grid>
							<Grid x:Name="VerticalTemplate"
								  MinWidth="44"
								  Visibility="Collapsed">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="18" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="18" />
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="VerticalTrackRect"
										   Fill="{TemplateBinding Background}"
										   Width="{ThemeResource SliderTrackThemeHeight}"
										   Grid.Column="1"
										   Grid.RowSpan="3" />
								<Rectangle x:Name="VerticalDecreaseRect"
										   Fill="{TemplateBinding Foreground}"
										   Grid.Column="1"
										   Grid.Row="2" />
								<TickBar x:Name="LeftTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
										 Width="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 HorizontalAlignment="Right"
										 Margin="0,0,4,0"
										 Grid.RowSpan="3" />
								<TickBar x:Name="VerticalInlineTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SystemControlBackgroundAltHighBrush}"
										 Width="{ThemeResource SliderTrackThemeHeight}"
										 Grid.Column="1"
										 Grid.RowSpan="3" />
								<TickBar x:Name="RightTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
										 Width="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 HorizontalAlignment="Left"
										 Margin="4,0,0,0"
										 Grid.Column="2"
										 Grid.RowSpan="3" />
								<Thumb x:Name="VerticalThumb"
									   Background="{ThemeResource SystemControlForegroundAccentBrush}"
									   Style="{StaticResource SliderThumbStyle}"
									   DataContext="{TemplateBinding Value}"
									   Width="24"
									   Height="8"
									   Grid.Row="1"
									   Grid.Column="0"
									   Grid.ColumnSpan="3"
									   AutomationProperties.AccessibilityView="Raw" />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!--This is a Uno-only Style which removes the ScrollContentPresenter, in order for ListViewBase to use the default Windows style (nearly)
	while delegating to a native implementation for performance.-->
	<xamarin:Style TargetType="ScrollViewer"
				   x:Key="ListViewBaseScrollViewerStyle">
		<ios:Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<ListViewBaseScrollContentPresenter x:Name="ScrollContentPresenter"
														Content="{TemplateBinding Content}"
														ContentTemplate="{TemplateBinding ContentTemplate}"
														ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</ios:Setter>
		<android:Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<ListViewBaseScrollContentPresenter x:Name="ScrollContentPresenter"
														Content="{TemplateBinding Content}"
														ContentTemplate="{TemplateBinding ContentTemplate}"
														ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</android:Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ListView -->
	<xamarin:Style TargetType="ListView">
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="TabNavigation"
				Value="Once" />
		<Setter Property="IsSwipeEnabled"
				Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Disabled" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Enabled" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled"
				Value="True" />
		<!--ZoomMode attached property is currently not supported-->
		<!--<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />-->
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
				Value="True" />
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition />
					<ContentThemeTransition />
					<ReorderThemeTransition />
					<EntranceThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<ItemsStackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="ScrollViewer"
									  xamarin:Style="{StaticResource ListViewBaseScrollViewerStyle}"
									  TabNavigation="{TemplateBinding TabNavigation}"
									  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
									  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
									  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
									  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
									  AutomationProperties.AccessibilityView="Raw">
							<ItemsPresenter Header="{TemplateBinding Header}"
											HeaderTemplate="{TemplateBinding HeaderTemplate}"
											HeaderTransitions="{TemplateBinding HeaderTransitions}"
											Footer="{TemplateBinding Footer}"
											FooterTemplate="{TemplateBinding FooterTemplate}"
											FooterTransitions="{TemplateBinding FooterTransitions}"
											Padding="{TemplateBinding Padding}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.GridView -->
	<xamarin:Style TargetType="GridView">
		<Setter Property="Padding"
				Value="0,0,0,10" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="TabNavigation"
				Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Disabled" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Enabled" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled"
				Value="True" />
		<!--<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />-->
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
				Value="True" />
		<Setter Property="IsSwipeEnabled"
				Value="True" />
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition />
					<ContentThemeTransition />
					<ReorderThemeTransition />
					<EntranceThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<not_wasm:ItemsWrapGrid Orientation="Horizontal" />
					<wasm:WrapPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridView">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="ScrollViewer"
									  xamarin:Style="{StaticResource ListViewBaseScrollViewerStyle}"
									  TabNavigation="{TemplateBinding TabNavigation}"
									  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
									  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
									  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
									  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
									  AutomationProperties.AccessibilityView="Raw">
							<ItemsPresenter Header="{TemplateBinding Header}"
											HeaderTemplate="{TemplateBinding HeaderTemplate}"
											HeaderTransitions="{TemplateBinding HeaderTransitions}"
											Footer="{TemplateBinding Footer}"
											FooterTemplate="{TemplateBinding FooterTemplate}"
											FooterTransitions="{TemplateBinding FooterTransitions}"
											Padding="{TemplateBinding Padding}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ScrollViewer -->
	<xamarin:Style TargetType="ScrollViewer"
				   x:Key="DefaultScrollViewerStyle">
		<Setter Property="HorizontalScrollMode"
				Value="Auto" />
		<Setter Property="VerticalScrollMode"
				Value="Auto" />
		<Setter Property="IsHorizontalRailEnabled"
				Value="True" />
		<Setter Property="IsVerticalRailEnabled"
				Value="True" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="ZoomMode"
				Value="Disabled" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="VerticalScrollBarVisibility"
				Value="Visible" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<win:VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ScrollingIndicatorStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="MouseIndicator"
													  To="NoIndicator">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="ScrollBarSeparator"
																   BeginTime="0:0:3" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
																		   Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:3">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
																		   Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:3">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="TouchIndicator"
													  To="NoIndicator">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="ScrollBarSeparator" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
																		   Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
																		   Storyboard.TargetProperty="IndicatorMode">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
													<DiscreteObjectKeyFrame.Value>
														<ScrollingIndicatorMode>None</ScrollingIndicatorMode>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="NoIndicator">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ScrollBarSeparator" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TouchIndicator">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ScrollBarSeparator" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
																	   Storyboard.TargetProperty="IndicatorMode"
																	   Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
																	   Storyboard.TargetProperty="IndicatorMode"
																	   Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseIndicator">
									<Storyboard>
										<FadeInThemeAnimation TargetName="ScrollBarSeparator" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar"
																	   Storyboard.TargetProperty="IndicatorMode"
																	   Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar"
																	   Storyboard.TargetProperty="IndicatorMode"
																	   Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</win:VisualStateManager.VisualStateGroups>
						<Grid Background="{TemplateBinding Background}">
							<win:Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</win:Grid.ColumnDefinitions>
							<win:Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</win:Grid.RowDefinitions>
							<!-- ContentTemplate not yet supported for ScrollContentPresenter-->
							<ScrollContentPresenter x:Name="ScrollContentPresenter"
													win:Grid.RowSpan="2"
													win:Grid.ColumnSpan="2"
													Margin="{TemplateBinding Padding}"
													xamarin:HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
													xamarin:VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
													xamarin:HorizontalScrollMode="{TemplateBinding HorizontalScrollMode}"
													xamarin:VerticalScrollMode="{TemplateBinding VerticalScrollMode}" />
							<!--Currently in Uno scrollbars are handled by the ScrollContentPresenter, which inherits from the native scroll viewer.-->
							<win:ScrollBar x:Name="VerticalScrollBar"
										   Grid.Column="1"
										   IsTabStop="False"
										   Maximum="{TemplateBinding ScrollableHeight}"
										   Orientation="Vertical"
										   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										   Value="{TemplateBinding VerticalOffset}"
										   ViewportSize="{TemplateBinding ViewportHeight}"
										   HorizontalAlignment="Right" />
							<win:ScrollBar x:Name="HorizontalScrollBar"
										   IsTabStop="False"
										   Maximum="{TemplateBinding ScrollableWidth}"
										   Orientation="Horizontal"
										   Grid.Row="1"
										   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
										   Value="{TemplateBinding HorizontalOffset}"
										   ViewportSize="{TemplateBinding ViewportWidth}" />
							<win:Border x:Name="ScrollBarSeparator"
										Grid.Row="1"
										Grid.Column="1"
										Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style TargetType="ScrollViewer"
				   BasedOn="{StaticResource DefaultScrollViewerStyle}" />

	<!-- Default style for Windows.UI.Xaml.Controls.PasswordBox -->
	<xamarin:Style x:Key="XamlDefaultPasswordBox"
				   TargetType="PasswordBox">
		<Setter Property="MinWidth"
				Value="{ThemeResource TextControlThemeMinWidth}" />
		<Setter Property="MinHeight"
				Value="{ThemeResource TextControlThemeMinHeight}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundAltHighBrush}" />
		<Setter Property="SelectionHighlightColor"
				Value="{ThemeResource SystemControlHighlightAccentBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource TextControlBorderThemeThickness}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="Padding"
				Value="{ThemeResource TextControlThemePadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid>
						<Grid.Resources>
							<win:Style x:Name="RevealButtonStyle"
									   TargetType="Button">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="Button">
											<Grid x:Name="ButtonLayoutGrid"
												  BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Background="{ThemeResource TextBoxButtonBackgroundThemeBrush}">
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal" />
														<VisualState x:Name="PointerOver">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
																							   Storyboard.TargetProperty="Foreground">
																	<DiscreteObjectKeyFrame KeyTime="0"
																							Value="{ThemeResource SystemControlHighlightAccentBrush}" />
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Pressed">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid"
																							   Storyboard.TargetProperty="Background">
																	<DiscreteObjectKeyFrame KeyTime="0"
																							Value="{ThemeResource SystemControlHighlightAccentBrush}" />
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
																							   Storyboard.TargetProperty="Foreground">
																	<DiscreteObjectKeyFrame KeyTime="0"
																							Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
																				 Storyboard.TargetProperty="Opacity"
																				 To="0"
																				 Duration="0" />
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<TextBlock x:Name="GlyphElement"
														   Foreground="{ThemeResource SystemControlForegroundChromeBlackMediumBrush}"
														   VerticalAlignment="Center"
														   HorizontalAlignment="Center"
														   FontStyle="Normal"
														   FontSize="16"
														   win:Text="&#xE052;"
														   xamarin:Text="&#xE18B;"
														   FontFamily="{ThemeResource SymbolThemeFontFamily}"
														   AutomationProperties.AccessibilityView="Raw" />
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</win:Style>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource TextControlBackgroundHoverOpacity}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlPageTextChromeBlackMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource TextControlBackgroundFocusedOpacity}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
																	   Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlForegroundChromeBlackHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RevealButton"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border x:Name="BackgroundElement"
								Grid.Row="1"
								Background="{TemplateBinding Background}"
								Margin="{TemplateBinding BorderThickness}"
								Opacity="{ThemeResource TextControlBackgroundRestOpacity}"
								Grid.ColumnSpan="2"
								Grid.RowSpan="1" />
						<Border x:Name="BorderElement"
								Grid.Row="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Grid.ColumnSpan="2"
								Grid.RowSpan="1" />
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Visibility="Collapsed"
										  Grid.Row="0"
										  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
										  Margin="0,0,0,8"
										  Grid.ColumnSpan="2"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  FontWeight="Normal" />
						<ScrollViewer x:Name="ContentElement"
									  Grid.Row="1"
									  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									  Margin="{TemplateBinding BorderThickness}"
									  Padding="{TemplateBinding Padding}"
									  IsTabStop="False"
									  ZoomMode="Disabled"
									  AutomationProperties.AccessibilityView="Raw" />
						<ContentControl x:Name="PlaceholderTextContentPresenter"
										Grid.Row="1"
										Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
										Margin="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										IsTabStop="False"
										Grid.ColumnSpan="2"
										Content="{TemplateBinding PlaceholderText}"
										IsHitTestVisible="False" />
						<Button x:Name="RevealButton"
								Grid.Row="1"
								Style="{StaticResource RevealButtonStyle}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Margin="{ThemeResource HelperButtonThemePadding}"
								IsTabStop="False"
								Grid.Column="1"
								Visibility="Collapsed"
								FontSize="{TemplateBinding FontSize}"
								VerticalAlignment="Stretch"
								MinWidth="34" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!--This is used by PasswordBox but must be declared outside of the control because of a limitation in the way the Uno xaml code generation handles styles.-->
	<xamarin:Style x:Key="RevealButtonStyle"
				   TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						  BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Background="{ThemeResource TextBoxButtonBackgroundThemeBrush}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="GlyphElement"
								   Foreground="{ThemeResource SystemControlForegroundChromeBlackMediumBrush}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Center"
								   FontStyle="Normal"
								   FontSize="16"
								   win:Text="&#xE052;"
								   xamarin:Text="&#xE18B;"
								   FontFamily="{ThemeResource SymbolThemeFontFamily}"
								   AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.CommandBar -->
	<not_wasm:Style x:Key="XamlCommandBar"
					TargetType="CommandBar">
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="ClosedDisplayMode"
				Value="Compact" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CommandBar">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="EllipsisIcon"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisplayModeStates">
								<win:VisualStateGroup.Transitions>
									<VisualTransition From="CompactClosed"
													  To="CompactOpenUp"
													  GeneratedDuration="0:0:0.467">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="CompactOpenUp"
													  To="CompactClosed"
													  GeneratedDuration="0:0:0.167">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactVerticalDelta}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="CompactClosed"
													  To="CompactOpenDown"
													  GeneratedDuration="0:0:0.467">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="-1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactVerticalDelta}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{ThemeResource AppBarThemeCompactHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="CompactOpenDown"
													  To="CompactClosed"
													  GeneratedDuration="0:0:0.167">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="-1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{ThemeResource AppBarThemeCompactHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="MinimalClosed"
													  To="MinimalOpenUp"
													  GeneratedDuration="0:0:0.467">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="Padding">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="16,11,16,0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="MinHeight">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{ThemeResource AppBarThemeMinimalHeight}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="MinimalOpenUp"
													  To="MinimalClosed"
													  GeneratedDuration="0:0:0.167">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="Padding">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="16,11,16,0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="MinHeight">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{ThemeResource AppBarThemeMinimalHeight}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="1" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="1" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="MinimalClosed"
													  To="MinimalOpenDown"
													  GeneratedDuration="0:0:0.467">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="Padding">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="16,11,16,0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="MinHeight">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{ThemeResource AppBarThemeMinimalHeight}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="-1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{ThemeResource AppBarThemeMinimalHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="MinimalOpenDown"
													  To="MinimalClosed"
													  GeneratedDuration="0:0:0.167">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="Padding">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="16,11,16,0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="MinHeight">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{ThemeResource AppBarThemeMinimalHeight}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="-1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="1" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="1" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{ThemeResource AppBarThemeMinimalHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="HiddenClosed"
													  To="HiddenOpenUp"
													  GeneratedDuration="0:0:0.467">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="HiddenOpenUp"
													  To="HiddenClosed"
													  GeneratedDuration="0:0:0.167">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="HiddenClosed"
													  To="HiddenOpenDown"
													  GeneratedDuration="0:0:0.467">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="-1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.467"
																		  KeySpline="0.1,0.9 0.2,1.0"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="HiddenOpenDown"
													  To="HiddenClosed"
													  GeneratedDuration="0:0:0.167">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																		   Storyboard.TargetProperty="VerticalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Stretch" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																		   Storyboard.TargetProperty="Rect">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																		   Storyboard.TargetProperty="IsEnabled">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="True" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopupOffsetTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="-1" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="0" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentTransform"
																		   Storyboard.TargetProperty="Y">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<win:SplineDoubleKeyFrame KeyTime="0:0:0.167"
																		  KeySpline="0.2,0 0,1"
																		  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</win:VisualStateGroup.Transitions>
								<VisualState x:Name="CompactClosed" />
								<VisualState x:Name="CompactOpenUp">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="VerticalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																	   Storyboard.TargetProperty="Rect">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CompactOpenDown">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="VerticalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																	   Storyboard.TargetProperty="Rect">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MinimalClosed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																	   Storyboard.TargetProperty="IsHitTestVisible">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="Padding">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="16,11,16,0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="MinHeight">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{ThemeResource AppBarThemeMinimalHeight}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																	   Storyboard.TargetProperty="IsHitTestVisible">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MinimalOpenUp">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinimalVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="Padding">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="16,11,16,0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="MinHeight">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{ThemeResource AppBarThemeMinimalHeight}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="VerticalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																	   Storyboard.TargetProperty="Rect">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MinimalOpenDown">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="Padding">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="16,11,16,0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="MinHeight">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{ThemeResource AppBarThemeMinimalHeight}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="VerticalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																	   Storyboard.TargetProperty="Rect">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HiddenClosed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="IsTabStop">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HiddenOpenUp">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HiddenVerticalDelta}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="VerticalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																	   Storyboard.TargetProperty="Rect">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.NegativeOverflowContentHeight}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HiddenOpenDown">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipGeometryTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreButton"
																	   Storyboard.TargetProperty="VerticalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighContrastBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClip"
																	   Storyboard.TargetProperty="Rect">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentClipRect}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform"
																	   Storyboard.TargetProperty="Y">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.ContentHeight}" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="AvailableCommandsStates">
								<VisualState x:Name="BothCommands" />
								<VisualState x:Name="PrimaryCommandsOnly">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SecondaryCommandsOnly">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsControl"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.Clip>
							<RectangleGeometry Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClipRect}">
								<RectangleGeometry.Transform>
									<TranslateTransform x:Name="ClipGeometryTransform"
														Y="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactVerticalDelta}" />
								</RectangleGeometry.Transform>
							</RectangleGeometry>
						</Grid.Clip>

						<Grid x:Name="ContentRoot"
							  VerticalAlignment="Top"
							  Margin="{TemplateBinding Padding}"
							  Height="{TemplateBinding Height}"
							  Background="{TemplateBinding Background}"
							  Opacity="{TemplateBinding Opacity}">

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<Grid.RenderTransform>
								<TranslateTransform x:Name="ContentTransform" />
							</Grid.RenderTransform>

							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<!-- Use a ContentControl rather than a ContentPresenter so that IsEnabled can be set to false
									in the Minimal/HiddenClosed states to remove it from being a tab-stop candidate. -->
								<ContentControl x:Name="ContentControl"
												Content="{TemplateBinding Content}"
												ContentTemplate="{TemplateBinding ContentTemplate}"
												ContentTransitions="{TemplateBinding ContentTransitions}"
												Foreground="{TemplateBinding Foreground}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												IsTabStop="False" />

								<ItemsControl x:Name="PrimaryItemsControl"
											  HorizontalAlignment="Right"
											  MinHeight="{ThemeResource AppBarThemeMinHeight}"
											  IsTabStop="False"
											  Grid.Column="1">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Orientation="Horizontal" />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
								</ItemsControl>
							</Grid>

							<Button x:Name="MoreButton"
									Foreground="{TemplateBinding Foreground}"
									Style="{StaticResource EllipsisButton}"
									Padding="16,23,16,0"
									MinHeight="{ThemeResource AppBarThemeCompactHeight}"
									VerticalAlignment="Top"
									Grid.Column="1">
								<FontIcon x:Name="EllipsisIcon"
										  VerticalAlignment="Center"
										  win:FontFamily="{ThemeResource SymbolThemeFontFamily}"
										  FontSize="16"
										  Glyph="&#xE10C;"
										  win:Height="{ThemeResource AppBarExpandButtonCircleDiameter}" />
							</Button>

							<Popup x:Name="OverflowPopup">
								<Popup.RenderTransform>
									<TranslateTransform x:Name="OverflowPopupOffsetTransform" />
								</Popup.RenderTransform>

								<Grid x:Name="OverflowContentRoot"
									  MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMinWidth}"
									  MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMaxWidth}"
									  MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentMaxHeight}">
									<Grid.Clip>
										<RectangleGeometry x:Name="OverflowContentRootClip" />
									</Grid.Clip>

									<Grid.RenderTransform>
										<TranslateTransform x:Name="OverflowContentRootTransform"
															X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandBarTemplateSettings.OverflowContentHorizontalOffset}" />
									</Grid.RenderTransform>

									<CommandBarOverflowPresenter x:Name="SecondaryItemsControl"
																 Style="{TemplateBinding CommandBarOverflowPresenterStyle}"
																 IsEnabled="False"
																 IsTabStop="False">
										<CommandBarOverflowPresenter.RenderTransform>
											<TranslateTransform x:Name="OverflowContentTransform" />
										</CommandBarOverflowPresenter.RenderTransform>
										<CommandBarOverflowPresenter.ItemContainerStyle>
											<Style TargetType="FrameworkElement">
												<Setter Property="HorizontalAlignment"
														Value="Stretch" />
												<Setter Property="Width"
														Value="NaN" />
											</Style>
										</CommandBarOverflowPresenter.ItemContainerStyle>
									</CommandBarOverflowPresenter>
								</Grid>
							</Popup>
							<Rectangle x:Name="HighContrastBorder"
									   xamarin:IsHitTestVisible="False"
									   x:DeferLoadStrategy="Lazy"
									   Grid.ColumnSpan="2"
									   Visibility="Collapsed"
									   VerticalAlignment="Stretch"
									   Stroke="{ThemeResource SystemControlForegroundTransparentBrush}"
									   StrokeThickness="1" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</not_wasm:Style>

	<!-- Ellipsis button style for use in Windows.UI.Xaml.Controls.AppBar and Windows.UI.Xaml.Controls.CommandBar -->
	<xamarin:Style x:Key="EllipsisButton"
				   TargetType="Button">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="0,0,9,0" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Right" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Width"
				Value="{ThemeResource AppBarExpandButtonThemeWidth}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Padding="{TemplateBinding Padding}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.AppBarSeparator -->
	<xamarin:Style x:Key="XamlAppBarSeparator"
				   TargetType="AppBarSeparator">
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="AppBarSeparator">
					<Rectangle x:Name="SeparatorRectangle"
							   Width="1"
							   Height="20"
							   Fill="{TemplateBinding Foreground}"
							   Margin="16,12,15,12"
							   VerticalAlignment="Top">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<!-- FullSize is used when we are in landscape or filled mode -->
								<VisualState x:Name="FullSize" />
								<!-- Compact is used when we are in portrait or snapped mode -->
								<VisualState x:Name="Compact" />
								<VisualState x:Name="Overflow">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SeparatorRectangle"
																	   Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="NaN" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SeparatorRectangle"
																	   Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SeparatorRectangle"
																	   Storyboard.TargetProperty="Height">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SeparatorRectangle"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="12,4,12,4" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Rectangle>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.AppBarButton -->
	<xamarin:Style x:Key="XamlAppBarButton"
				   TargetType="AppBarButton">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="Width"
				Value="68" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="AppBarButton">
					<Grid x:Name="Root"
						  MinWidth="{TemplateBinding MinWidth}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullSize" />
								<VisualState x:Name="Compact">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Overflow">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OverflowWithToggleButtons">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="38,0,12,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputModeStates">
								<VisualState x:Name="InputModeDefault" />
								<VisualState x:Name="TouchInputMode">
									<VisualState.Setters>
										<Setter Target="OverflowTextLabel.Padding"
												Value="0,11,0,13" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<StackPanel x:Name="ContentRoot"
									MinHeight="{ThemeResource AppBarThemeCompactHeight}">
							<ContentPresenter x:Name="Content"
											  Height="20"
											  Margin="0,14,0,4"
											  Content="{TemplateBinding Icon}"
											  Foreground="{TemplateBinding Foreground}"
											  HorizontalAlignment="Stretch"
											  AutomationProperties.AccessibilityView="Raw" />
							<TextBlock x:Name="TextLabel"
									   Text="{TemplateBinding Label}"
									   Foreground="{TemplateBinding Foreground}"
									   FontSize="12"
									   FontFamily="{TemplateBinding FontFamily}"
									   TextAlignment="Center"
									   TextWrapping="Wrap"
									   Margin="0,0,0,6" />
						</StackPanel>

						<TextBlock x:Name="OverflowTextLabel"
								   Text="{TemplateBinding Label}"
								   Foreground="{TemplateBinding Foreground}"
								   FontSize="15"
								   FontFamily="{TemplateBinding FontFamily}"
								   TextAlignment="Left"
								   TextTrimming="Clip"
								   TextWrapping="NoWrap"
								   HorizontalAlignment="Stretch"
								   VerticalAlignment="Center"
								   Margin="12,0,12,0"
								   Padding="0,5,0,7"
								   Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.AppBarToggleButton -->
	<xamarin:Style x:Key="XamlAppBarToggleButton"
				   TargetType="AppBarToggleButton">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="Width"
				Value="68" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="AppBarToggleButton">
					<Grid x:Name="Root"
						  MinWidth="{TemplateBinding MinWidth}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullSize" />
								<VisualState x:Name="Compact">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Overflow">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHighlightBackground"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="OverflowContentRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AccentOverlayBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="OverflowContentRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AccentOverlayBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="OverflowContentRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHighlightBackground"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="OverflowContentRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHighlightBackground"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AccentOverlayBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="OverflowContentRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHighlightBackground"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AccentOverlayBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation Storyboard.TargetName="OverflowContentRoot" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHighlightBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledAccentBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHighlightBackground"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowCheckGlyph"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowTextLabel"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputModeStates">
								<VisualState x:Name="InputModeDefault" />
								<VisualState x:Name="TouchInputMode">
									<VisualState.Setters>
										<Setter Target="OverflowTextLabel.Padding"
												Value="0,11,0,13" />
										<Setter Target="OverflowCheckGlyph.Margin"
												Value="12,12,12,12" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Rectangle x:Name="CheckedHighlightBackground"
								   Fill="{ThemeResource SystemControlHighlightAccentBrush}"
								   Opacity="0" />
						<Rectangle x:Name="AccentOverlayBackground" />

						<StackPanel x:Name="ContentRoot"
									MinHeight="{ThemeResource AppBarThemeCompactHeight}">
							<ContentPresenter x:Name="Content"
											  Height="20"
											  Margin="0,14,0,4"
											  Content="{TemplateBinding Icon}"
											  Foreground="{TemplateBinding Foreground}"
											  HorizontalAlignment="Stretch"
											  AutomationProperties.AccessibilityView="Raw" />
							<TextBlock x:Name="TextLabel"
									   Text="{TemplateBinding Label}"
									   Foreground="{TemplateBinding Foreground}"
									   FontSize="12"
									   FontFamily="{TemplateBinding FontFamily}"
									   TextAlignment="Center"
									   TextWrapping="Wrap"
									   Margin="0,0,0,6" />
						</StackPanel>

						<Grid x:Name="OverflowContentRoot">
							<TextBlock x:Name="OverflowCheckGlyph"
									   win:Text="&#xE73E;"
									   xamarin:Text="&#xE081;"
									   Foreground="{TemplateBinding Foreground}"
									   FontFamily="{ThemeResource SymbolThemeFontFamily}"
									   FontSize="16"
									   HorizontalAlignment="Left"
									   VerticalAlignment="Center"
									   Height="14"
									   Width="14"
									   Margin="12,6,12,6"
									   Opacity="0"
									   Visibility="Collapsed" />

							<TextBlock x:Name="OverflowTextLabel"
									   Text="{TemplateBinding Label}"
									   Foreground="{TemplateBinding Foreground}"
									   FontSize="15"
									   FontFamily="{TemplateBinding FontFamily}"
									   TextAlignment="Left"
									   TextTrimming="Clip"
									   TextWrapping="NoWrap"
									   HorizontalAlignment="Stretch"
									   VerticalAlignment="Center"
									   Margin="38,0,12,0"
									   Padding="0,5,0,7"
									   Visibility="Collapsed" />
						</Grid>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<xamarin:Style TargetType="AppBarToggleButton"
				   BasedOn="{StaticResource XamlAppBarToggleButton}" />
	<xamarin:Style TargetType="AppBarSeparator"
				   BasedOn="{StaticResource XamlAppBarSeparator}" />


	<!-- Default UWP style for Windows.UI.Xaml.Controls.Frame -->
	<xamarin:Style x:Key="XamlDefaultFrame"
				   TargetType="Frame">
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Frame">
					<ContentPresenter Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
									  ContentTransitions="{TemplateBinding ContentTransitions}"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  Padding="{TemplateBinding Padding}"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ProgressBar -->
	<xamarin:Style x:Key="XamlDefaultProgressBar"
				   TargetType="ProgressBar">
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlHighlightAccentBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource ProgressBarBorderThemeThickness}" />
		<Setter Property="Maximum"
				Value="100" />
		<Setter Property="MinHeight"
				Value="{ThemeResource ProgressBarThemeMinHeight}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ProgressBar">
					<Grid>
						<Border x:Name="DeterminateRoot"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
							<Rectangle x:Name="ProgressBarIndicator"
									   Margin="{TemplateBinding Padding}"
									   Fill="{TemplateBinding Foreground}"
									   HorizontalAlignment="Left" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ListViewHeaderItem -->
	<Style TargetType="ListViewHeaderItem">
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Margin"
				Value="0,0,0,4" />
		<Setter Property="Padding"
				Value="12,8,12,0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="MinHeight"
				Value="{ThemeResource ListViewHeaderItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewHeaderItem">
					<StackPanel Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter x:Name="ContentPresenter"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
						<Rectangle Stroke="{ThemeResource SystemControlForegroundBaseLowBrush}"
								   StrokeThickness="0.5"
								   Height="1"
								   VerticalAlignment="Bottom"
								   HorizontalAlignment="Stretch"
								   Margin="12,8,12,0" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Default style for Windows.UI.Xaml.Controls.GridViewHeaderItem -->
	<Style TargetType="GridViewHeaderItem">
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Margin"
				Value="0,0,0,4" />
		<Setter Property="Padding"
				Value="12,8,12,0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Top" />
		<Setter Property="MinHeight"
				Value="{ThemeResource GridViewHeaderItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewHeaderItem">
					<StackPanel Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter x:Name="ContentPresenter"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
						<Rectangle Stroke="{ThemeResource SystemControlForegroundBaseLowBrush}"
								   StrokeThickness="0.5"
								   Height="1"
								   VerticalAlignment="Bottom"
								   HorizontalAlignment="Stretch"
								   Margin="12,8,12,0" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Default style for Windows.UI.Xaml.Controls.FlipViewItem -->
	<Style TargetType="FlipViewItem">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="TabNavigation"
				Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="FlipViewItem">
					<ContentPresenter Content="{TemplateBinding Content}"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  ContentTransitions="{TemplateBinding ContentTransitions}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Default style for Windows.UI.Xaml.Controls.ToggleSwitch -->
	<Style x:Key="XamlDefaultToggleSwitch"
		   TargetType="ToggleSwitch">
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="MinWidth"
				Value="154" />
		<Setter Property="ManipulationMode"
				Value="System,TranslateX" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleSwitch">
					<Grid Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="StrokeThickness">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlPageBackgroundBaseLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ToggleStates">
								<VisualStateGroup.Transitions>
									<VisualTransition x:Name="DraggingToOnTransition"
													  From="Dragging"
													  To="On"
													  GeneratedDuration="0">
										<Storyboard>
											<RepositionThemeAnimation TargetName="SwitchKnob"
																	  FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition x:Name="DraggingToOffTransition"
													  From="Dragging"
													  To="Off"
													  GeneratedDuration="0">
										<Storyboard>
											<RepositionThemeAnimation TargetName="SwitchKnob"
																	  FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}" />
										</Storyboard>
									</VisualTransition>
									<VisualTransition x:Name="OnToOffTransition"
													  From="On"
													  To="Off"
													  GeneratedDuration="0">
										<Storyboard>
											<RepositionThemeAnimation TargetName="SwitchKnob"
																	  FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}" />
										</Storyboard>
									</VisualTransition>
									<VisualTransition x:Name="OffToOnTransition"
													  From="Off"
													  To="On"
													  GeneratedDuration="0">
										<Storyboard>
											<RepositionThemeAnimation TargetName="SwitchKnob"
																	  FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Dragging" />
								<VisualState x:Name="Off" />
								<VisualState x:Name="On">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="KnobTranslateTransform"
														 Storyboard.TargetProperty="X"
														 To="24"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ContentStates">
								<VisualState x:Name="OffContent">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="OffContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
																	   Storyboard.TargetName="OffContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<x:Boolean>True</x:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OnContent">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="OnContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
																	   Storyboard.TargetName="OnContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<x:Boolean>True</x:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="10" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="10" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="12"
											  MaxWidth="12" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Visibility="Collapsed"
										  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
										  Grid.ColumnSpan="4"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  IsHitTestVisible="False"
										  AutomationProperties.AccessibilityView="Raw" />
						<ContentPresenter x:Name="OffContentPresenter"
										  Grid.Row="1"
										  Grid.RowSpan="3"
										  Grid.Column="2"
										  Opacity="0"
										  Foreground="{TemplateBinding Foreground}"
										  IsHitTestVisible="False"
										  Content="{TemplateBinding OffContent}"
										  ContentTemplate="{TemplateBinding OffContentTemplate}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw" />
						<ContentPresenter x:Name="OnContentPresenter"
										  Grid.Row="1"
										  Grid.RowSpan="3"
										  Grid.Column="2"
										  Opacity="0"
										  Foreground="{TemplateBinding Foreground}"
										  IsHitTestVisible="False"
										  Content="{TemplateBinding OnContent}"
										  ContentTemplate="{TemplateBinding OnContentTemplate}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw" />
						<Grid Grid.Row="1"
							  Grid.RowSpan="3"
							  Grid.ColumnSpan="3"
							  Margin="0,5"
							  Control.IsTemplateFocusTarget="True" />
						<Rectangle x:Name="OuterBorder"
								   Grid.Row="2"
								   Height="20"
								   Width="44"
								   RadiusX="10"
								   RadiusY="10"
								   Stroke="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
								   StrokeThickness="2" />
						<Rectangle x:Name="SwitchKnobBounds"
								   Grid.Row="2"
								   Height="20"
								   Width="44"
								   RadiusX="10"
								   RadiusY="10"
								   Fill="{ThemeResource SystemControlHighlightAccentBrush}"
								   Stroke="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
								   StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}"
								   Opacity="0" />
						<Grid x:Name="SwitchKnob"
							  Grid.Row="2"
							  HorizontalAlignment="Left"
							  Width="20"
							  Height="20">
							<Ellipse x:Name="SwitchKnobOn"
									 Fill="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}"
									 Width="10"
									 Height="10"
									 Opacity="0" />
							<Ellipse x:Name="SwitchKnobOff"
									 Fill="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									 Width="10"
									 Height="10" />
							<Grid.RenderTransform>
								<TranslateTransform x:Name="KnobTranslateTransform" />
							</Grid.RenderTransform>
						</Grid>
						<Thumb x:Name="SwitchThumb"
							   AutomationProperties.AccessibilityView="Raw"
							   Grid.Row="1"
							   Grid.RowSpan="3"
							   Grid.ColumnSpan="3">
							<Thumb.Template>
								<ControlTemplate TargetType="Thumb">
									<Rectangle Fill="Transparent" />
								</ControlTemplate>
							</Thumb.Template>
						</Thumb>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Default style for Windows.UI.Xaml.Pivot  -->
	<Style x:Key="BaseContentControlStyle"
		   TargetType="ContentControl">
		<Setter Property="FontFamily"
				Value="XamlAutoFontFamily" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="FontSize"
				Value="15" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<ContentPresenter Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
									  Margin="{TemplateBinding Padding}"
									  ContentTransitions="{TemplateBinding ContentTransitions}"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									  OpticalMarginAlignment="TrimSideBearings" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TitleContentControlStyle"
		   TargetType="ContentControl"
		   BasedOn="{StaticResource BaseContentControlStyle}">
		<Setter Property="FontFamily"
				Value="{ThemeResource PivotTitleFontFamily}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource PivotTitleThemeFontWeight}" />
		<Setter Property="FontSize"
				Value="{ThemeResource PivotTitleFontSize}" />
	</Style>

	<ControlTemplate x:Key="NextTemplate"
					 TargetType="Button">
		<Border x:Name="Root"
				Background="{ThemeResource PivotNextButtonBackground}"
				BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}"
				BorderBrush="{ThemeResource PivotNextButtonBorderBrush}">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="PointerOver">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotNextButtonBackgroundPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="BorderBrush">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotNextButtonBorderBrushPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
														   Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotNextButtonForegroundPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotNextButtonBackgroundPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="BorderBrush">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotNextButtonBorderBrushPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
														   Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotNextButtonForegroundPressed}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<FontIcon x:Name="Arrow"
					  FontFamily="{ThemeResource SymbolThemeFontFamily}"
					  FontSize="12"
					  Foreground="{ThemeResource PivotNextButtonForeground}"
					  Glyph="&#xE0E3;"
					  HorizontalAlignment="Center"
					  VerticalAlignment="Center"
					  MirroredWhenRightToLeft="True"
					  UseLayoutRounding="False" />
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="PreviousTemplate"
					 TargetType="Button">
		<Border x:Name="Root"
				Background="{ThemeResource PivotPreviousButtonBackground}"
				BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}"
				BorderBrush="{ThemeResource PivotPreviousButtonBorderBrush}">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="PointerOver">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotPreviousButtonBackgroundPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="BorderBrush">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotPreviousButtonBorderBrushPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
														   Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotPreviousButtonForegroundPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotPreviousButtonBackgroundPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="BorderBrush">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotPreviousButtonBorderBrushPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
														   Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0"
														Value="{ThemeResource PivotPreviousButtonForegroundPressed}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<FontIcon x:Name="Arrow"
					  FontFamily="{ThemeResource SymbolThemeFontFamily}"
					  FontSize="12"
					  Foreground="{ThemeResource PivotPreviousButtonForeground}"
					  Glyph="&#xE0E2;"
					  HorizontalAlignment="Center"
					  VerticalAlignment="Center"
					  MirroredWhenRightToLeft="True"
					  UseLayoutRounding="False" />
		</Border>
	</ControlTemplate>

	<Style x:Key="XamlDefaultPivot" TargetType="Pivot">
		<Setter Property="Margin"
				Value="0" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Background"
				Value="{ThemeResource PivotBackground}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<Grid />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:Pivot">
					<Grid x:Name="RootElement"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  Background="{TemplateBinding Background}">
						<Grid.Resources>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Orientation">
								<VisualState x:Name="Portrait">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotPortraitThemePadding}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Landscape">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotLandscapeThemePadding}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="NavigationButtonsVisibility">
								<VisualState x:Name="NavigationButtonsHidden" />
								<VisualState x:Name="NavigationButtonsVisible">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PreviousButtonVisible">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NextButtonVisible">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton"
																	   Storyboard.TargetProperty="IsEnabled">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="HeaderDynamic" />
								<VisualState x:Name="HeaderStatic">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="StaticHeader"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<ContentControl x:Name="TitleContentControl"
										IsTabStop="False"
										Margin="{StaticResource PivotPortraitThemePadding}"
										Style="{StaticResource TitleContentControlStyle}"
										Visibility="Collapsed"
										Content="{TemplateBinding Title}"
										ContentTemplate="{TemplateBinding TitleTemplate}" />
						<Grid Grid.Row="1">
							<Grid.Resources>
							</Grid.Resources>
							<ScrollViewer x:Name="ScrollViewer"
										  Margin="{TemplateBinding Padding}"
										  HorizontalSnapPointsType="MandatorySingle"
										  HorizontalSnapPointsAlignment="Center"
										  HorizontalScrollBarVisibility="Hidden"
										  VerticalScrollMode="Disabled"
										  VerticalScrollBarVisibility="Disabled"
										  VerticalSnapPointsType="None"
										  VerticalContentAlignment="Stretch"
										  ZoomMode="Disabled"
										  win:Template="{StaticResource ScrollViewerScrollBarlessTemplate}"
										  BringIntoViewOnFocusChange="False">
								<Grid x:Name="Panel"
									  VerticalAlignment="Stretch">
									<Grid x:Name="PivotLayoutElement">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RenderTransform>
											<CompositeTransform x:Name="PivotLayoutElementTranslateTransform" />
										</Grid.RenderTransform>
										<ContentPresenter x:Name="LeftHeaderPresenter"
														  Content="{TemplateBinding LeftHeader}"
														  ContentTemplate="{TemplateBinding LeftHeaderTemplate}"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch" />
										<ContentControl x:Name="HeaderClipper"
														Grid.Column="1"
														win:UseSystemFocusVisuals="{StaticResource UseSystemFocusVisuals}"
														HorizontalContentAlignment="Stretch">
											<ContentControl.Clip>
												<RectangleGeometry x:Name="HeaderClipperGeometry" />
											</ContentControl.Clip>
											<Grid Background="{ThemeResource PivotHeaderBackground}">
												<Grid.RenderTransform>
													<CompositeTransform x:Name="HeaderOffsetTranslateTransform" />
												</Grid.RenderTransform>
												<PivotHeaderPanel x:Name="StaticHeader"
																  Visibility="Collapsed">
													<PivotHeaderPanel.RenderTransform>
														<CompositeTransform x:Name="StaticHeaderTranslateTransform" />
													</PivotHeaderPanel.RenderTransform>
												</PivotHeaderPanel>
												<PivotHeaderPanel x:Name="Header">
													<PivotHeaderPanel.RenderTransform>
														<CompositeTransform x:Name="HeaderTranslateTransform" />
													</PivotHeaderPanel.RenderTransform>
												</PivotHeaderPanel>
												<Rectangle x:Name="FocusFollower"
														   IsHitTestVisible="False"
														   Fill="Transparent"
														   Control.IsTemplateFocusTarget="True"
														   HorizontalAlignment="Stretch"
														   VerticalAlignment="Stretch" />
											</Grid>
										</ContentControl>
										<Button x:Name="PreviousButton"
												Grid.Column="1"
												Template="{StaticResource PreviousTemplate}"
												Width="20"
												Height="36"
												UseSystemFocusVisuals="False"
												Margin="{ThemeResource PivotNavButtonMargin}"
												IsTabStop="False"
												IsEnabled="False"
												HorizontalAlignment="Left"
												VerticalAlignment="Top"
												Opacity="0"
												Background="Transparent" />
										<Button x:Name="NextButton"
												Grid.Column="1"
												Template="{StaticResource NextTemplate}"
												Width="20"
												Height="36"
												UseSystemFocusVisuals="False"
												Margin="{ThemeResource PivotNavButtonMargin}"
												IsTabStop="False"
												IsEnabled="False"
												HorizontalAlignment="Right"
												VerticalAlignment="Top"
												Opacity="0"
												Background="Transparent" />
										<ContentPresenter x:Name="RightHeaderPresenter"
														  Grid.Column="2"
														  Content="{TemplateBinding RightHeader}"
														  ContentTemplate="{TemplateBinding RightHeaderTemplate}"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch" />
										<ItemsPresenter x:Name="PivotItemPresenter"
														Grid.Row="1"
														Grid.ColumnSpan="3">
											<ItemsPresenter.RenderTransform>
												<TransformGroup>
													<TranslateTransform x:Name="ItemsPresenterTranslateTransform" />
													<CompositeTransform x:Name="ItemsPresenterCompositeTransform" />
												</TransformGroup>
											</ItemsPresenter.RenderTransform>
										</ItemsPresenter>
									</Grid>
								</Grid>
							</ScrollViewer>
						</Grid>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Default style for Windows.UI.Xaml.Controls.PivotItem -->
	<Style TargetType="PivotItem">
		<Setter Property="Background"
				Value="{ThemeResource PivotItemBackground}" />
		<Setter Property="Margin"
				Value="{ThemeResource PivotItemMargin}" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:PivotItem">
					<Grid Background="{TemplateBinding Background}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Pivot">
								<VisualState x:Name="Right" />
								<VisualState x:Name="Left" />
								<VisualState x:Name="Center" />
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Content="{TemplateBinding Content}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  Margin="{TemplateBinding Padding}" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Default style for Windows.UI.Xaml.Controls.Primitives.PivotHeaderItem -->
	<Style TargetType="local:PivotHeaderItem">
		<Setter Property="FontSize"
				Value="{ThemeResource PivotHeaderItemFontSize}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource PivotHeaderItemFontFamily}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource PivotHeaderItemThemeFontWeight}" />
		<Setter Property="CharacterSpacing"
				Value="{ThemeResource PivotHeaderItemCharacterSpacing}" />
		<Setter Property="Background"
				Value="{ThemeResource PivotHeaderItemBackgroundUnselected}" />
		<Setter Property="Foreground"
				Value="{ThemeResource PivotHeaderItemForegroundUnselected}" />
		<Setter Property="Padding"
				Value="{ThemeResource PivotHeaderItemMargin}" />
		<Setter Property="Height"
				Value="48" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="UseSystemFocusVisuals"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:PivotHeaderItem">
					<Grid x:Name="Grid"
						  Background="{TemplateBinding Background}"
						  Padding="{TemplateBinding Padding}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">

								<VisualStateGroup.Transitions>
									<VisualTransition From="Unselected"
													  To="UnselectedLocked"
													  GeneratedDuration="0:0:0.33" />
									<VisualTransition From="UnselectedLocked"
													  To="Unselected"
													  GeneratedDuration="0:0:0.33" />
								</VisualStateGroup.Transitions>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="SelectedPipe.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselected">
									<VisualState.Setters>
										<Setter Target="SelectedPipe.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="UnselectedLocked">
									<VisualState.Setters>
										<Setter Target="SelectedPipe.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>

									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentPresenterTranslateTransform"
														 Storyboard.TargetProperty="X"
														 Duration="0"
														 To="{ThemeResource PivotHeaderItemLockedTranslation}" />
										<DoubleAnimation Storyboard.TargetName="ContentPresenter"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 Duration="0"
														 To="0" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Selected">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemForegroundSelected}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemBackgroundSelected}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnselectedPointerOver">
									<VisualState.Setters>
										<Setter Target="SelectedPipe.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemForegroundUnselectedPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemBackgroundUnselectedPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPointerOver">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemForegroundSelectedPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemBackgroundSelectedPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnselectedPressed">
									<VisualState.Setters>
										<Setter Target="SelectedPipe.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemForegroundUnselectedPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemBackgroundUnselectedPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedPressed">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemForegroundSelectedPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PivotHeaderItemBackgroundSelectedPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<Grid.RenderTransform>
							<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
						</Grid.RenderTransform>

						<ContentPresenter x:Name="ContentPresenter"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  FontSize="{TemplateBinding FontSize}"
										  FontFamily="{TemplateBinding FontFamily}"
										  FontWeight="{TemplateBinding FontWeight}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  OpticalMarginAlignment="TrimSideBearings" />
						<Rectangle x:Name="SelectedPipe"
								   Fill="{ThemeResource PivotHeaderItemSelectedPipeFill}"
								   Height="2"
								   VerticalAlignment="Bottom"
								   HorizontalAlignment="Stretch"
								   Margin="0,0,0,2" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Name="AutoSuggestBoxDeleteButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{ThemeResource TextControlButtonBackground}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="GlyphElement"
							Foreground="{ThemeResource TextControlButtonForeground}"
							VerticalAlignment="Center"
							HorizontalAlignment="Center"
							FontStyle="Normal"
							FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"
							Text="&#xE10A;"
							FontFamily="{ThemeResource SymbolThemeFontFamily}"
							AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Name="AutoSuggestBoxQueryButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{ThemeResource TextControlButtonBackground}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
							Content="{TemplateBinding Content}"
							ContentTransitions="{TemplateBinding ContentTransitions}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Margin="{TemplateBinding Padding}"
							FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TextBox" x:Key="AutoSuggestBoxTextBoxStyle">
		<Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
		<Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
		<Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
		<Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
		<Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
		<Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
		<Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid>
						<Grid.Resources>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Disabled">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Light" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueryButton" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForeground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border x:Name="BorderElement"
							Grid.Row="1"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Grid.ColumnSpan="3"
							Grid.RowSpan="1" />
						<ContentPresenter x:Name="HeaderContentPresenter"
							x:DeferLoadStrategy="Lazy"
							Visibility="Collapsed"
							Grid.Row="0"
							Foreground="{ThemeResource TextControlHeaderForeground}"
							Margin="0,0,0,8"
							Grid.ColumnSpan="3"
							Content="{TemplateBinding Header}"
							ContentTemplate="{TemplateBinding HeaderTemplate}"
							FontWeight="Normal"
							TextWrapping="Wrap" />
						<ScrollViewer x:Name="ContentElement"
							Grid.Row="1"
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
							IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
							IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
							Margin="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
							IsTabStop="False"
							AutomationProperties.AccessibilityView="Raw"
							ZoomMode="Disabled" />
						<ContentControl x:Name="PlaceholderTextContentPresenter"
							Grid.Row="1"
							Foreground="{ThemeResource TextControlPlaceholderForeground}"
							Margin="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
							IsTabStop="False"
							Grid.ColumnSpan="3"
							Content="{TemplateBinding PlaceholderText}"
							IsHitTestVisible="False" />
						<Button x:Name="DeleteButton"
							Grid.Row="1"
							Style="{StaticResource AutoSuggestBoxDeleteButtonStyle}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsTabStop="False"
							Grid.Column="1"
							Visibility="Collapsed"
							FontSize="{TemplateBinding FontSize}"
							MinWidth="34"
							AutomationProperties.AccessibilityView="Raw"
							VerticalAlignment="Stretch" />
						<Button x:Name="QueryButton"
							Grid.Row="1"
							Style="{StaticResource AutoSuggestBoxQueryButtonStyle}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsTabStop="False"
							Grid.Column="2"
							FontSize="{TemplateBinding FontSize}"
							MinWidth="34"
							Width="{TemplateBinding Height}"
							VerticalAlignment="Stretch"
							AutomationProperties.AccessibilityView="Raw"/>
					
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Default Style for AutoSuggestBox -->
	<Style TargetType="AutoSuggestBox">
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="TextBoxStyle" Value="{StaticResource AutoSuggestBoxTextBoxStyle}" />
		<Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="AutoSuggestBox">
					<Grid x:Name="LayoutRoot">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="Orientation">
								<VisualState x:Name="Landscape" />
								<VisualState x:Name="Portrait" />
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<TextBox x:Name="TextBox"
							Style="{TemplateBinding TextBoxStyle}"
							PlaceholderText="{TemplateBinding PlaceholderText}"
							Header="{TemplateBinding Header}"
							Width="{TemplateBinding Width}"
							ScrollViewer.BringIntoViewOnFocusChange="False"
							Canvas.ZIndex="0"
							Margin="0"
							DesiredCandidateWindowAlignment="BottomEdge"
							UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"/>
						<Popup x:Name="SuggestionsPopup">
							<Border x:Name="SuggestionsContainer">
								<Border.RenderTransform>
									<TranslateTransform x:Name="UpwardTransform" />
								</Border.RenderTransform>
								<ListView x:Name="SuggestionsList"
									Background="{ThemeResource AutoSuggestBoxSuggestionsListBackground}"
									BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}"
									BorderBrush="{ThemeResource AutoSuggestBoxSuggestionsListBorderBrush}"
									DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
									IsItemClickEnabled="True"
									ItemTemplate="{TemplateBinding ItemTemplate}"
									ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
									MaxHeight="{ThemeResource AutoSuggestListMaxHeight}"
									Margin="{ThemeResource AutoSuggestListMargin}"
									Padding="{ThemeResource AutoSuggestListPadding}">
									<ListView.ItemContainerTransitions>
										<TransitionCollection />
									</ListView.ItemContainerTransitions>
								</ListView>
							</Border>
						</Popup>
					
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="MediaPlayerElement">
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Stretch"
				Value="Uniform" />
		<Setter Property="Background"
				Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="MediaPlayerElement">
					<Grid x:Name="LayoutRoot">
						<Border Background="Transparent" />
						<Image x:Name="PosterImage"
							   Visibility="Collapsed"
							   Source="{TemplateBinding PosterSource}"
							   Stretch="{TemplateBinding Stretch}" />
						<MediaPlayerPresenter x:Name="MediaPlayerPresenter"
											  IsFullWindow="{TemplateBinding IsFullWindow}"
											  Stretch="{TemplateBinding Stretch}"
											  MediaPlayer="{TemplateBinding MediaPlayer}"
											  Visibility="Collapsed"
											  Background="{TemplateBinding Background}" />
						<ContentPresenter x:Name="TransportControlsPresenter"
										  Visibility="{TemplateBinding AreTransportControlsEnabled}" />
						<Grid x:Name="TimedTextSourcePresenter" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MTC_ButtonStyle"
		   TargetType="Button">
		<Setter Property="Width"
				Value="{ThemeResource MTCMediaButtonWidth}" />
		<Setter Property="Height"
				Value="{ThemeResource MTCMediaButtonHeight}" />
		<Setter Property="AllowFocusOnInteraction"
				Value="True" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background"
				Value="Transparent" />
	</Style>

	<Style x:Key="MTC_CommandBarStyle"
		   TargetType="CommandBar"
		   BasedOn="{StaticResource XamlCommandBar}">
		<Setter Property="Height"
				Value="{ThemeResource MTCMediaButtonHeight}" />
	</Style>

	<Style x:Key="MediaTextBlockStyle"
		   TargetType="TextBlock">
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="FontSize"
				Value="{ThemeResource MTCMediaFontSize}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource MTCMediaFontFamily}" />
		<Setter Property="Style"
				Value="{ThemeResource CaptionTextBlockStyle}" />
		<Setter Property="IsTextScaleFactorEnabled"
				Value="False" />
	</Style>

	<Style TargetType="Thumb"
		   x:Key="MTC_SliderThumbStyle">
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background"
				Value="{ThemeResource SliderThumbBackground}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Ellipse x:Name="ellipse"
							 Stroke="{TemplateBinding Background}"
							 StrokeThickness="2"
							 Fill="{TemplateBinding Foreground}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="ProgressBar"
		   x:Key="MediaSliderProgressBarStyle">
		<Setter Property="Height"
				Value="{ThemeResource SliderTrackThemeHeight}" />
		<Setter Property="Minimum"
				Value="0" />
		<Setter Property="Maximum"
				Value="100" />
		<Setter Property="Foreground"
				Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="BorderThickness"
				Value="0.25" />
	</Style>

	<Style x:Key="MediaSliderStyle"
		   TargetType="Slider">
		<Setter Property="Background"
				Value="{ThemeResource SliderTrackFill}" />
		<Setter Property="BorderThickness"
				Value="{ThemeResource SliderBorderThemeThickness}" />
		<Setter Property="Foreground"
				Value="{ThemeResource SliderTrackValueFill}" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="ManipulationMode"
				Value="None" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="FocusVisualMargin"
				Value="-7,0,-7,0" />
		<Setter Property="IsFocusEngagementEnabled"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Slider">
					<Grid Margin="{TemplateBinding Padding}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackFillPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackFillPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderThumbBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderThumbBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderContainerBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackValueFillPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackValueFillPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderHeaderForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackValueFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackValueFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderThumbBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderThumbBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTickBarFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTickBarFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTickBarFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RightTickBar"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTickBarFillDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderContainerBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackFillPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackFillPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderThumbBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderThumbBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderContainerBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackValueFillPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalDecreaseRect"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SliderTrackValueFillPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusEngagementStates">
								<VisualState x:Name="FocusDisengaged" />
								<VisualState x:Name="FocusEngagedHorizontal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer"
																	   Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																	   Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="FocusEngagedVertical">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer"
																	   Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																	   Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="HeaderContentPresenter"
										  x:DeferLoadStrategy="Lazy"
										  Visibility="Collapsed"
										  Foreground="{ThemeResource SliderHeaderForeground}"
										  Margin="{ThemeResource SliderHeaderThemeMargin}"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  FontWeight="{ThemeResource SliderHeaderThemeFontWeight}"
										  TextWrapping="Wrap" />
						<Grid x:Name="SliderContainer"
							  Background="{ThemeResource SliderContainerBackground}"
							  Grid.Row="1"
							  Control.IsTemplateFocusTarget="True">
							<Grid x:Name="HorizontalTemplate"
								  MinHeight="44">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="18" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="18" />
								</Grid.RowDefinitions>
								<Rectangle x:Name="HorizontalTrackRect"
										   Fill="{TemplateBinding Background}"
										   Height="{ThemeResource SliderTrackThemeHeight}"
										   Grid.Row="1"
										   Grid.ColumnSpan="3" />
								<ProgressBar x:Name="DownloadProgressIndicator"
											 Style="{StaticResource MediaSliderProgressBarStyle}"
											 Grid.Row="1"
											 Grid.ColumnSpan="3"
											 HorizontalAlignment="Stretch"
											 VerticalAlignment="Center" />
								<Rectangle x:Name="HorizontalDecreaseRect"
										   Fill="{TemplateBinding Foreground}"
										   Grid.Row="1" />
								<TickBar x:Name="TopTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SliderTickBarFill}"
										 Height="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 VerticalAlignment="Bottom"
										 Margin="0,0,0,4"
										 Grid.ColumnSpan="3" />
								<TickBar x:Name="HorizontalInlineTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SliderInlineTickBarFill}"
										 Height="{ThemeResource SliderTrackThemeHeight}"
										 Grid.Row="1"
										 Grid.ColumnSpan="3" />
								<TickBar x:Name="BottomTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SliderTickBarFill}"
										 Height="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 VerticalAlignment="Top"
										 Margin="0,4,0,0"
										 Grid.Row="2"
										 Grid.ColumnSpan="3" />
								<Thumb x:Name="HorizontalThumb"
									   Style="{StaticResource MTC_SliderThumbStyle}"
									   Height="24"
									   Width="24"
									   Grid.Row="0"
									   Grid.RowSpan="3"
									   Grid.Column="1"
									   FocusVisualMargin="-14,-6,-14,-6"
									   AutomationProperties.AccessibilityView="Raw">
									<!--<ToolTipService.ToolTip>
										<ToolTip x:Name="ThumbnailTooltip">
											<ContentPresenter Content="{Binding}" />
										</ToolTip>
									</ToolTipService.ToolTip>-->
									<Thumb.DataContext>
										<Grid Height="112"
											  Width="192">
											<Image x:Name="ThumbnailImage" />
											<Border Background="{ThemeResource SystemControlBackgroundBaseMediumBrush}"
													VerticalAlignment="Bottom"
													HorizontalAlignment="Left">
												<TextBlock x:Name="TimeElapsedPreview"
														   Margin="6,1,6,3"
														   Style="{StaticResource BodyTextBlockStyle}"
														   IsTextScaleFactorEnabled="False"
														   Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}" />
											</Border>
										</Grid>
									</Thumb.DataContext>
								</Thumb>
							</Grid>
							<Grid x:Name="VerticalTemplate"
								  MinWidth="44"
								  Visibility="Collapsed">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="18" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="18" />
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="VerticalTrackRect"
										   Fill="{TemplateBinding Background}"
										   Width="{ThemeResource SliderTrackThemeHeight}"
										   Grid.Column="1"
										   Grid.RowSpan="3" />
								<Rectangle x:Name="VerticalDecreaseRect"
										   Fill="{TemplateBinding Foreground}"
										   Grid.Column="1"
										   Grid.Row="2" />
								<TickBar x:Name="LeftTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SliderTickBarFill}"
										 Width="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 HorizontalAlignment="Right"
										 Margin="0,0,4,0"
										 Grid.RowSpan="3" />
								<TickBar x:Name="VerticalInlineTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SliderInlineTickBarFill}"
										 Width="{ThemeResource SliderTrackThemeHeight}"
										 Grid.Column="1"
										 Grid.RowSpan="3" />
								<TickBar x:Name="RightTickBar"
										 Visibility="Collapsed"
										 Fill="{ThemeResource SliderTickBarFill}"
										 Width="{ThemeResource SliderOutsideTickBarThemeHeight}"
										 HorizontalAlignment="Left"
										 Margin="4,0,0,0"
										 Grid.Column="2"
										 Grid.RowSpan="3" />
								<Thumb x:Name="VerticalThumb"
									   Style="{StaticResource MTC_SliderThumbStyle}"
									   DataContext="{TemplateBinding Value}"
									   Width="24"
									   Height="8"
									   Grid.Row="1"
									   Grid.Column="0"
									   Grid.ColumnSpan="3"
									   FocusVisualMargin="-6,-14,-6,-14"
									   AutomationProperties.AccessibilityView="Raw" />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MTC_FlyoutStyle"
		   TargetType="FlyoutPresenter">
		<Setter Property="Background"
				Value="{ThemeResource SystemControlPageBackgroundAltMediumBrush}" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="MinWidth"
				Value="50" />
		<Setter Property="MinHeight"
				Value="50" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="FlyoutPresenter">
					<Border Background="{TemplateBinding Background}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch">
						
						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="MediaTransportControls">
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="FlowDirection"
				Value="LeftToRight" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="IsTextScaleFactorEnabled"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="MediaTransportControls">
					<Grid x:Name="RootGrid"
						  Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<!-- ControlPanel Visibility states -->
							<VisualStateGroup x:Name="ControlPanelVisibilityStates">
								<VisualState x:Name="ControlPanelFadeIn">
									<Storyboard>
										<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
																	   Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border">
											<EasingDoubleKeyFrame KeyTime="0"
																  Value="0" />
											<EasingDoubleKeyFrame KeyTime="0:0:0.3"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>-->
										<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
														 Storyboard.TargetName="ControlPanelGrid"
														 From="50"
														 To="0.5"
														 Duration="0:0:0.3" />
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border"
														 From="0"
														 To="1"
														 Duration="0:0:0.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ControlPanelFadeOut">
									<Storyboard>
										<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
																	   Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border">
											<EasingDoubleKeyFrame KeyTime="0"
																  Value="1" />
											<EasingDoubleKeyFrame KeyTime="0:0:0.7"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
																	   Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
														 Storyboard.TargetName="ControlPanelGrid"
														 From="0.5"
														 To="50"
														 Duration="0:0:0.7" />
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border"
														 From="1"
														 To="0"
														 Duration="0:0:0.7" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<!-- ControlPanel Visibility states -->
							<!-- Media state visual states -->
							<VisualStateGroup x:Name="MediaStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Buffering">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																	   Storyboard.TargetName="BufferingProgressBar">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Loading">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																	   Storyboard.TargetName="BufferingProgressBar">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="ProgressSlider"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="0" />
										<DoubleAnimation Storyboard.TargetName="MediaControlsCommandBar"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Error">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																	   Storyboard.TargetName="ErrorBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard />
								</VisualState>
							</VisualStateGroup>
							<!-- Media state visual states -->
							<!-- Audio Selection Button visibility states -->
							<VisualStateGroup x:Name="AudioSelectionAvailablityStates">
								<VisualState x:Name="AudioSelectionAvailable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																	   Storyboard.TargetName="AudioTracksSelectionButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="AudioSelectionUnavailable" />
							</VisualStateGroup>
							<!-- Video volume visibility states -->
							<!-- Closed Captioning Selection Button visibility states -->
							<VisualStateGroup x:Name="CCSelectionAvailablityStates">
								<VisualState x:Name="CCSelectionAvailable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																	   Storyboard.TargetName="CCSelectionButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CCSelectionUnavailable" />
							</VisualStateGroup>
							<!-- Closed Captioning  visibility states -->
							<!-- Focus states -->
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<!-- Focus states -->
							<VisualStateGroup x:Name="MediaTransportControlMode">
								<VisualState x:Name="NormalMode" />
								<VisualState x:Name="CompactMode">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VolumeFlyout"
																	   Storyboard.TargetProperty="Placement">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Top" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftSidePlayBorder"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeTextGrid"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediaTransportControls_Command_Border"
																	   Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="2" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediaTransportControls_Command_Border"
																	   Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediaControlsCommandBar"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayPauseButton"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<!-- PlayPause states -->
							<VisualStateGroup x:Name="PlayPauseStates">
								<VisualState x:Name="PlayState" />
								<VisualState x:Name="PauseState">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayPauseSymbolLeft"
																	   Storyboard.TargetProperty="Symbol">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Pause" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayPauseSymbol"
																	   Storyboard.TargetProperty="Symbol">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Pause" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<!-- VolumeMute states -->
							<VisualStateGroup x:Name="VolumeMuteStates">
								<VisualState x:Name="VolumeState" />
								<VisualState x:Name="MuteState">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AudioMuteSymbol"
																	   Storyboard.TargetProperty="Symbol">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Mute" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VolumeMuteSymbol"
																	   Storyboard.TargetProperty="Symbol">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Mute" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<!-- FullWindow states -->
							<VisualStateGroup x:Name="FullWindowStates">
								<VisualState x:Name="NonFullWindowState" />
								<VisualState x:Name="FullWindowState">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FullWindowSymbol"
																	   Storyboard.TargetProperty="Symbol">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="BackToWindow" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ControlPanel_ControlPanelVisibilityStates_Border">
							<Grid x:Name="ControlPanelGrid"
								  Background="{ThemeResource SystemControlPageBackgroundAltMediumBrush}"
								  VerticalAlignment="Bottom">
								<Grid.RenderTransform>
									<TranslateTransform X="0"
														Y="0.5" />
								</Grid.RenderTransform>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Border x:Name="ErrorBorder"
										Width="320"
										Height="96"
										Grid.ColumnSpan="3"
										HorizontalAlignment="Center"
										Background="{ThemeResource SystemControlPageBackgroundAltMediumBrush}"
										Visibility="Collapsed">
									<TextBlock x:Name="ErrorTextBlock"
											   Style="{StaticResource MediaTextBlockStyle}"
											   TextWrapping="WrapWholeWords"
											   Margin="12" />
								</Border>
								<Border x:Name="MediaTransportControls_Timeline_Border"
										Grid.Column="1"
										Grid.Row="1">
									<Grid x:Name="MediaTransportControls_Timeline_Grid">
										<Grid.ColumnDefinitions>
											<ColumnDefinition />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Slider x:Name="ProgressSlider"
												Style="{StaticResource MediaSliderStyle}"
												Margin="12,0"
												MinWidth="80"
												Height="33"
												VerticalAlignment="Center"
												IsThumbToolTipEnabled="False" />
										<ProgressBar x:Name="BufferingProgressBar"
													 Height="4"
													 IsIndeterminate="True"
													 IsHitTestVisible="False"
													 VerticalAlignment="Top"
													 Margin="0,2,0,0"
													 Visibility="Collapsed" />
										<Grid x:Name="TimeTextGrid"
											  Margin="12,0"
											  Grid.Row="1"
											  Height="15">
											<TextBlock x:Name="TimeElapsedElement"
													   Style="{StaticResource MediaTextBlockStyle}"
													   Margin="0"
													   Text="00:00"
													   HorizontalAlignment="Left"
													   VerticalAlignment="Bottom" />
											<TextBlock x:Name="TimeRemainingElement"
													   Style="{StaticResource MediaTextBlockStyle}"
													   Text="00:00"
													   HorizontalAlignment="Right"
													   VerticalAlignment="Bottom" />
										</Grid>
									</Grid>
								</Border>
								<Border x:Name="LeftSidePlayBorder"
										Grid.Column="0"
										Grid.Row="1"
										Visibility="Collapsed">
									<Button x:Name='PlayPauseButtonOnLeft'
											Margin="0"
											VerticalAlignment="Center"
											Style='{StaticResource MTC_ButtonStyle}'>
										<SymbolIcon x:Name='PlayPauseSymbolLeft'
													Symbol='Play' />
									</Button>
								</Border>
								<Border x:Name="MediaTransportControls_Command_Border"
										Grid.Column="1"
										Grid.Row="2">

									<Grid x:Name="MediaControlsCommandBar">

										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<StackPanel Orientation="Horizontal">
											<Button x:Name='VolumeMuteButton'
													Style='{StaticResource MTC_ButtonStyle}'>
												<Button.Flyout>
													<Flyout x:Name='VolumeFlyout'
															Placement="Right"
															FlyoutPresenterStyle="{StaticResource MTC_FlyoutStyle}">
														<StackPanel Orientation="Horizontal">
															<Button x:Name='AudioMuteButton'
																	Style='{StaticResource MTC_ButtonStyle}'
																	VerticalAlignment='Center'
																	HorizontalAlignment='Center'
																	Margin='12'>
																<SymbolIcon x:Name='AudioMuteSymbol'
																			Symbol='Volume' />
															</Button>
															<Slider x:Name='VolumeSlider'
																	Value='50'
																	IsThumbToolTipEnabled='False'
																	Width='{ThemeResource MTCHorizontalVolumeSliderWidth}'
																	VerticalAlignment='Center'
																	HorizontalAlignment='Center'
																	Margin='0' />
															<TextBlock x:Name='VolumeValue'
																	   Style='{StaticResource MediaTextBlockStyle}'
																	   Text="{Binding ElementName=VolumeSlider,Path=Value}"
																	   HorizontalAlignment='Center'
																	   VerticalAlignment='Center'
																	   Width='24'
																	   Margin='12' />
														</StackPanel>
													</Flyout>
												</Button.Flyout>
												<SymbolIcon x:Name='VolumeMuteSymbol'
															Symbol='Volume' />
											</Button>
											<Button x:Name='CCSelectionButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xED1E;" />
											</Button>
											<Button x:Name='AudioTracksSelectionButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xED1F;" />
											</Button>
										</StackPanel>

										<StackPanel Orientation="Horizontal"
													Grid.Column="1"
													VerticalAlignment="Center">

											<Button x:Name='StopButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<SymbolIcon x:Name='StopSymbol'
															Symbol='Stop' />
											</Button>
											<Button x:Name='SkipBackwardButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xED3C;" />
											</Button>
											<Button x:Name='PreviousTrackButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<SymbolIcon x:Name='PreviousTrackSymbol'
															Symbol='Previous' />
											</Button>
											<Button x:Name='RewindButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xEB9E;" />
											</Button>
											<Button x:Name='PlayPauseButton'
													Style='{StaticResource MTC_ButtonStyle}'>
												<SymbolIcon x:Name='PlayPauseSymbol'
															Symbol='Play' />
											</Button>
											<Button x:Name='FastForwardButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xEB9D;" />
											</Button>
											<Button x:Name='NextTrackButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<SymbolIcon x:Name='NextTrackSymbol'
															Symbol='Next' />
											</Button>
											<Button x:Name='SkipForwardButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xED3D;" />
											</Button>
											<Button x:Name='PlaybackRateButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xEC57;" />
											</Button>

										</StackPanel>

										<StackPanel Orientation="Horizontal"
													Grid.Column="2">
											<Button x:Name='ZoomButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xE799;" />
											</Button>
											<Button x:Name='CastButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<FontIcon Glyph="&#xEC15;" />
											</Button>
											<Button x:Name='FullWindowButton'
													Style='{StaticResource MTC_ButtonStyle}'
													Visibility='Collapsed'>
												<SymbolIcon x:Name='FullWindowSymbol'
															Symbol='FullScreen' />
											</Button>
										</StackPanel>

									</Grid>
								</Border>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<win:AcrylicBrush x:Key="SystemControlChromeMediumLowAcrylicElementMediumBrush" BackgroundSource="Backdrop" TintColor="{StaticResource SystemChromeAltHighColor}" TintOpacity="0.6" FallbackColor="{StaticResource SystemChromeMediumLowColor}" />
	<xamarin:SolidColorBrush x:Key="SystemControlChromeMediumLowAcrylicElementMediumBrush" Color="{StaticResource SystemChromeMediumLowColor}" />
	<StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlChromeMediumLowAcrylicElementMediumBrush" />
	<Color x:Key="SystemChromeMediumHighColor">#FFE6E6E6</Color>
	
	<win:AcrylicBrush x:Key="SystemControlChromeMediumLowAcrylicWindowMediumBrush" BackgroundSource="HostBackdrop" TintColor="{StaticResource SystemChromeAltHighColor}" TintOpacity="0.6" FallbackColor="{StaticResource SystemChromeMediumLowColor}" />
	<xamarin:SolidColorBrush x:Key="SystemControlChromeMediumLowAcrylicWindowMediumBrush" Color="{StaticResource SystemChromeMediumLowColor}" />
	<StaticResource x:Key="NavigationViewExpandedPaneBackground" ResourceKey="SystemControlChromeMediumLowAcrylicWindowMediumBrush" />

	<!--
	<RevealBackgroundBrush x:Key="SystemControlTransparentRevealBackgroundBrush" TargetTheme="Dark" Color="Transparent" FallbackColor="Transparent" />
	<RevealBackgroundBrush x:Key="SystemControlHighlightListLowRevealBackgroundBrush" TargetTheme="Dark" Color="{StaticResource SystemRevealListLowColor}" FallbackColor="{StaticResource SystemListLowColor}" />
	<RevealBackgroundBrush x:Key="SystemControlHighlightListMediumRevealBackgroundBrush" TargetTheme="Dark" Color="{StaticResource SystemRevealListMediumColor}" FallbackColor="{StaticResource SystemListMediumColor}" />
	-->

	<SolidColorBrush x:Key="SystemControlTransparentRevealBackgroundBrush" Color="Transparent" />
	<SolidColorBrush x:Key="SystemControlHighlightListLowRevealBackgroundBrush" Color="{StaticResource SystemListLowColor}" />
	<SolidColorBrush x:Key="SystemControlHighlightListMediumRevealBackgroundBrush" Color="{StaticResource SystemListMediumColor}" />

</ResourceDictionary>
