<Project ToolsVersion="15.0">

  <ItemGroup>
    <_OverrideTargetFrameworksDependency Include="Restore" />
    <_OverrideTargetFrameworksDependency Include="Build" />

    <_OverrideTargetFrameworksDependency Include="_ComputeTargetFrameworkItems" />
    <_OverrideTargetFrameworksDependency Include="DispatchToInnerBuilds" />
    <_OverrideTargetFrameworksDependency Include="Pack" />
    <_OverrideTargetFrameworksDependency Include="BuiltProjectOutputGroup" />
    <_OverrideTargetFrameworksDependency Include="DocumentationProjectOutputGroup" />
    <_OverrideTargetFrameworksDependency Include="_AddPriFileToPackBuildOutput" />
    <_OverrideTargetFrameworksDependency Include="PrepareForBuild" />

    <!-- Used when restoring packages in VS15.2 -->
    <_OverrideTargetFrameworksDependency Include="GetRestoreProjectFrameworks" />

    <!-- Used when evaluation compatibility between referenced projects -->
    <_OverrideTargetFrameworksDependency Include="GetTargetFrameworkProperties" />

    <!-- this target has been introduced in VS15.5 -->
    <_OverrideTargetFrameworksDependency Include="GetTargetFrameworks" />

    <!--This items get excuted by the nuget Restore target-->
    <_OverrideTargetFrameworksDependency Include="_GenerateRestoreGraphProjectEntry" />
    <_OverrideTargetFrameworksDependency Include="_GenerateRestoreGraph" />
    <_OverrideTargetFrameworksDependency Include="_IsProjectRestoreSupported" />
    <_OverrideTargetFrameworksDependency Include="_GenerateRestoreProjectPathWalk" />
  </ItemGroup>

  <Target Name="_ResolveTargetFrameworks"
    Condition="'$(TargetFrameworks)'!=''"
    BeforeTargets="@(_OverrideTargetFrameworksDependency)"
    DependsOnTargets="_FillMsBuildVersion">

    <PropertyGroup>
      <TargetFrameworksOverride Condition="'$(MicrosoftBuildVersion)' &gt;= '15.4'">$(TargetFrameworks)</TargetFrameworksOverride>
      <TargetFrameworksOverride Condition="'$(CI_Build)'!='' and '$(TargetFrameworksCI)'!='' and '$(UITestsEnabled)'==''">$(TargetFrameworksCI)</TargetFrameworksOverride>

      <_CanOverrideFramework>false</_CanOverrideFramework>
      <_CanOverrideFramework Condition="'$(BuildTargetFramework)' !='' and '$(DisableBuildTargetFramework)' =='' and '$(ExcludeRestorePackageImports)'!='true' and '$(DesignTimeBuild)' != 'true' and $(TargetFrameworks.Contains($(BuildTargetFramework)))">true</_CanOverrideFramework>

      <!-- Override the building target framework, for faster compilation -->
      <TargetFrameworksOverride Condition="$(_CanOverrideFramework)">$(BuildTargetFramework)</TargetFrameworksOverride>
    </PropertyGroup>

    <CreateProperty Value="$(TargetFrameworksOverride)">
      <Output TaskParameter="Value" PropertyName="TargetFrameworks" />
    </CreateProperty>

    <Message Text="Target framework override to $(TargetFrameworks) because BuildTargetFramework is set ($(BuildTargetFramework))." Condition="$(_CanOverrideFramework) and '$(TargetFramework)'==''" Importance="high" />
    <Message Text="MSBuild Version $(MicrosoftBuildVersion), TargetFrameworks $(TargetFrameworks)" />
  </Target>

  <PropertyGroup Condition="('$(ExcludeRestorePackageImports)'!='true' and '$(TargetFrameworks)'!='') or '$(CI_Build)'!=''">
    <TargetFrameworks Condition="'$(TargetFrameworksOverride)'==''">$(TargetFrameworks)</TargetFrameworks>
    <TargetFrameworks Condition="'$(TargetFrameworksOverride)'!=''">$(TargetFrameworksOverride)</TargetFrameworks>
  </PropertyGroup>

</Project>
